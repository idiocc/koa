{
"version":3,
"file":"compile/koa.js",
"lineCount":2196,
"mappings":"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",
"sources":["node_modules/tty/index.js","node_modules/util/index.js","node_modules/@idio/debug/src/ms.js","node_modules/@idio/debug/src/bytes.js","node_modules/erte/src/index.js","node_modules/@idio/debug/src/modifiers/f.js","node_modules/@idio/debug/src/node.js","node_modules/@idio/debug/src/common.js","node_modules/@goa/is-generator-function/src/index.js","node_modules/http/index.js","node_modules/stream/index.js","node_modules/events/index.js","node_modules/assert/index.js","node_modules/path/index.js","node_modules/@goa/statuses/src/codes.js","node_modules/@goa/statuses/src/index.js","node_modules/@goa/goa/modules/ee-first/index.js","node_modules/@goa/goa/modules/on-finished/index.js","node_modules/fs/index.js","node_modules/@goa/goa/modules/destroy.js","node_modules/@goa/vary/src/index.js","node_modules/@goa/mime-types/src/index.js","node_modules/@goa/content-type/src/index.js","node_modules/@goa/type-is/src/media-typer.js","node_modules/@goa/type-is/src/index.js","node_modules/@goa/goa/modules/content-disposition/index.js","node_modules/@goa/goa/modules/error-inject/index.js","node_modules/@goa/goa/modules/cache-content-type/index.js","node_modules/@goa/goa/modules/koa-is-json/index.js","node_modules/@goa/goa/modules/escape-html/index.js","node_modules/crypto/index.js","node_modules/@goa/cookies/src/keygrip-lib/sign.js","node_modules/@goa/cookies/src/keygrip-lib/ctc.js","node_modules/@goa/cookies/src/Keygrip.js","node_modules/@goa/cookies/src/Cookie.js","node_modules/@goa/cookies/src/index.js","node_modules/@goa/negotiator/src/lib/charset.js","node_modules/@goa/negotiator/src/lib/encoding.js","node_modules/@goa/negotiator/src/lib/language.js","node_modules/@goa/negotiator/src/lib/mediaType.js","node_modules/@goa/negotiator/src/index.js","node_modules/@goa/accepts/src/index.js","node_modules/@goa/http-errors/src/index.js","node_modules/@goa/goa/modules/delegates/index.js","node_modules/@goa/goa/modules/http-assert/index.js","node_modules/url/index.js","node_modules/net/index.js","node_modules/querystring/index.js","node_modules/@goa/goa/modules/parseurl/index.js","node_modules/@goa/goa/modules/fresh/index.js","node_modules/@goa/goa/src/request.js","node_modules/@goa/goa/src/context.js","node_modules/@goa/goa/src/response.js","node_modules/@goa/compose/src/index.js","node_modules/@goa/goa/src/application.js","node_modules/@idio/debug/src/index.js","src/depack.js"],
"sourcesContent":["export default tty\nexport const {\n  ReadStream,\n  WriteStream,\n  isatty,\n} = tty","export default util\nexport const {\n  TextDecoder,\n  TextEncoder,\n  callbackify,\n  debug,\n  debuglog,\n  deprecate,\n  error,\n  format,\n  getSystemErrorName,\n  inherits,\n  inspect,\n  isArray,\n  isBoolean,\n  isBuffer,\n  isDate,\n  isError,\n  isFunction,\n  isNull,\n  isNullOrUndefined,\n  isNumber,\n  isObject,\n  isPrimitive,\n  isRegExp,\n  isString,\n  isSymbol,\n  isUndefined,\n  log,\n  print,\n  promisify,\n  puts,\n} = util","/**\n * Helpers.\n */\n\nvar s = 1000\nvar m = s * 60\nvar h = m * 60\nvar d = h * 24\nvar w = d * 7\nvar y = d * 365.25\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {string|number} val\n * @param {Object} [options]\n */\nexport default function(val, options = {}) {\n  var type = typeof val\n  if (type == 'string' && val.length > 0) {\n    const t = /** @type {string} */ (val)\n    return parse(t)\n  } else if (type == 'number' && isFinite(val)) {\n    const n = /** @type {number} */ (val)\n    return options.long ? fmtLong(n) : fmtShort(n)\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  )\n}\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {string} str\n * @api private\n */\nfunction parse(str) {\n  str = String(str)\n  if (str.length > 100) {\n    return\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  )\n  if (!match) {\n    return\n  }\n  var n = parseFloat(match[1])\n  var type = (match[2] || 'ms').toLowerCase()\n  switch (type) {\n  case 'years':\n  case 'year':\n  case 'yrs':\n  case 'yr':\n  case 'y':\n    return n * y\n  case 'weeks':\n  case 'week':\n  case 'w':\n    return n * w\n  case 'days':\n  case 'day':\n  case 'd':\n    return n * d\n  case 'hours':\n  case 'hour':\n  case 'hrs':\n  case 'hr':\n  case 'h':\n    return n * h\n  case 'minutes':\n  case 'minute':\n  case 'mins':\n  case 'min':\n  case 'm':\n    return n * m\n  case 'seconds':\n  case 'second':\n  case 'secs':\n  case 'sec':\n  case 's':\n    return n * s\n  case 'milliseconds':\n  case 'millisecond':\n  case 'msecs':\n  case 'msec':\n  case 'ms':\n    return n\n  default:\n    return undefined\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {number} ms\n * @api private\n */\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms)\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd'\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h'\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm'\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's'\n  }\n  return ms + 'ms'\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {number} ms\n * @api private\n */\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms)\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day')\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour')\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute')\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second')\n  }\n  return ms + ' ms'\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '')\n}\n\n/**\n * @license\n * Copyright (c) 2016 Zeit, Inc.\n * https://npmjs.org/ms\n */","/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\nconst formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g\nconst formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/\n\nconst map = {\n  'b':  1,\n  'kb': 1 << 10,\n  'mb': 1 << 20,\n  'gb': 1 << 30,\n  'tb': Math.pow(1024, 4),\n  'pb': Math.pow(1024, 5),\n}\n\nconst parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: (string|undefined),\n *  decimalPlaces: (number|undefined),\n *  fixedDecimals: (boolean|undefined),\n *  thousandsSeparator: (string|undefined),\n *  unitSeparator: (string|undefined),\n *  }} [options] bytes options.\n *\n * @returns {?(string|number)}\n */\n\nexport default function bytes(value, options) {\n  if (typeof value == 'string') {\n    return parse(value)\n  }\n\n  if (typeof value == 'number') {\n    return format(value, options)\n  }\n\n  return null\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {Object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n * @returns {?string}\n */\nexport function format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null\n  }\n\n  const mag = Math.abs(value)\n  const thousandsSeparator = (options && options.thousandsSeparator) || ''\n  const unitSeparator = (options && options.unitSeparator) || ''\n  const decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2\n  const fixedDecimals = Boolean(options && options.fixedDecimals)\n  let unit = (options && options.unit) || ''\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map['pb']) {\n      unit = 'PB'\n    } else if (mag >= map['tb']) {\n      unit = 'TB'\n    } else if (mag >= map['gb']) {\n      unit = 'GB'\n    } else if (mag >= map['mb']) {\n      unit = 'MB'\n    } else if (mag >= map['kb']) {\n      unit = 'KB'\n    } else {\n      unit = 'B'\n    }\n  }\n\n  const val = value / map[unit.toLowerCase()]\n  let str = val.toFixed(decimalPlaces)\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1')\n  }\n\n  if (thousandsSeparator) {\n    str = str.replace(formatThousandsRegExp, thousandsSeparator)\n  }\n\n  return str + unitSeparator + unit\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nexport function parse(val) {\n  if (typeof val == 'number' && !isNaN(val)) {\n    return val\n  }\n\n  if (typeof val != 'string') {\n    return null\n  }\n\n  // Test if the string passed is valid\n  const results = parseRegExp.exec(val)\n  let floatValue, unit = 'b'\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10)\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1])\n    unit = results[4].toLowerCase()\n  }\n\n  return Math.floor(map[unit] * floatValue)\n}","import Diff from './diff'\n\nconst colors = {\n  'black': 30,\n  'red': 31,\n  'green': 32,\n  'yellow': 33,\n  'blue': 34,\n  'magenta': 35,\n  'cyan': 36,\n  'white': 37,\n  'grey': 90,\n}\n\nconst backgroundColors = {\n  'black': 40,\n  'red': 41,\n  'green': 42,\n  'yellow': 43,\n  'blue': 44,\n  'magenta': 45,\n  'cyan': 46,\n  'white': 47,\n}\n\n/**\n * Color the foreground.\n * @param {string} string The string to color.\n * @param {_erte.Color} color The color to apply.\n */\nexport function c(string, color) {\n  const cc = colors[color]\n  if (!cc) return string\n  return `\\x1b[${cc}m${string}\\x1b[0m`\n}\n\n/**\n * Color the background.\n * @param {string} string The string to color.\n * @param {_erte.Color} color The color to apply.\n */\nexport function b(string, color) {\n  const cc = backgroundColors[color]\n  if (!cc) return string\n  return `\\x1b[${cc}m${string}\\x1b[0m`\n}\n\n/**\n * Compares two strings and outputs a coloured version where strings don't match.\n * @param {string} source A string to compare.\n * @param {string} target Target string to compare with.\n * @returns {string} A string which uses shell-codes to highligh differences.\n */\nexport default function erte(source, target) {\n  const diff = new Diff()\n  const d = diff.diff(source, target)\n  const m = d.map(({ added, removed, value }) => {\n    let p\n    const s = value.split(' ')\n    if (added) {\n      p = s.map(t => {\n        return t.replace(/\\n$/mg, '\u23ce\\n')\n      }).map(t => c(t, 'green')).join(b(' ', 'green'))\n    } else if (removed) {\n      p = s.map(t => {\n        return t.replace(/\\n$/mg, '\u23ce\\n')\n      }).map(t => c(t, 'red')).join(b(' ', 'red'))\n    } else {\n      p = c(value, 'grey')\n    }\n    return p\n  })\n  const s = m.join('')\n  return s\n}\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_erte.Color} Color The color to apply.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {('black'|'red'|'green'|'yellow'|'blue'|'magenta'|'cyan'|'white'|'grey')} _erte.Color The color to apply.\n */\n","import { format } from '../bytes'\nimport { c } from 'erte'\n\nexport default {\n  'f': format,\n  'fy'(v) {\n    return c(format(v) || '', 'yellow')\n  },\n  'fr'(v) {\n    return c(format(v) || '', 'red')\n  },\n  'fb'(v) {\n    return c(format(v) || '', 'blue')\n  },\n  'fg'(v) {\n    return c(format(v) || '', 'green')\n  },\n  'fc'(v) { return c(format(v) || '', 'cyan') },\n  'fm'(v) { return c(format(v) || '', 'magenta') },\n}\n","import tty from 'tty'\nimport { inspect, format } from 'util'\nimport ms from './ms'\nimport f from './modifiers/f'\n\nconst colors = [6, 2, 3, 4, 5, 1]\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\nconst inspectOpts = Object.keys(process.env).filter(key => {\n  return /^debug_/i.test(key)\n}).reduce((obj, key) => {\n  // Camel-case\n  const prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, (_, k) => {\n      return k.toUpperCase()\n    })\n\n  // Coerce string value into JS value\n  let val = process.env[key]\n  if (/^(yes|on|true|enabled)$/i.test(val)) {\n    val = true\n  } else if (/^(no|off|false|disabled)$/i.test(val)) {\n    val = false\n  } else if (val === 'null') {\n    val = null\n  } else {\n    val = Number(val)\n  }\n\n  obj[prop] = val\n  return obj\n}, {})\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\nfunction useColors() {\n  return 'colors' in inspectOpts ?\n    Boolean(inspectOpts['colors']) :\n    tty.isatty(process.stderr.fd)\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n * @param {!Array} args\n * @this {_debug.DebugFunction}\n */\nfunction formatArgs(args) {\n  const { namespace, useColors: uc, color, diff } = this\n\n  if (uc) {\n    const c = color\n    const colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c)\n    const prefix = `  ${colorCode};1m${namespace} \\u001B[0m`\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix)\n    args.push(colorCode + 'm+' + ms(diff) + '\\u001B[0m')\n  } else {\n    args[0] = getDate() + namespace + ' ' + args[0]\n  }\n}\n\nfunction getDate() {\n  if (inspectOpts['hideDate']) {\n    return ''\n  }\n  return new Date().toISOString() + ' '\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\nfunction log(...args) {\n  return process.stderr.write(format(...args) + '\\n')\n}\n\n/**\n * Save `namespaces`.\n * @param {string} namespaces\n */\nfunction save(namespaces) {\n  if (namespaces) {\n    process.env['DEBUG'] = namespaces\n  } else {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env['DEBUG']\n  }\n}\n\n/**\n * Load `namespaces`.\n * @return {string} returns the previously persisted debug modes\n */\n\nfunction load() {\n  return process.env['DEBUG']\n}\n\n/**\n * Init logic for `debug` instances.\n * @param {_debug.DebugFunction} debug\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n  debug.inspectOpts = { ...inspectOpts }\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n * @param {Object} v\n * @this {_debug.DebugFunction}\n */\nconst o = function(v) {\n  const opts = {\n    ...this.inspectOpts,\n    colors: this.useColors,\n  }\n  return inspect(v, opts)\n    .replace(/\\s*\\n\\s*/g, ' ')\n}\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n * @param {Object} v\n * @this {_debug.DebugFunction}\n */\nconst O = function(v) {\n  const opts = {\n    ...this.inspectOpts,\n    colors: this.useColors,\n  }\n  return inspect(v, opts)\n}\n\nconst formatters = { 'o': o, 'O': O, ...f }\n\n/** @type {_debug.Env} */\nconst NodeEnv = {\n  init,\n  log,\n  formatArgs,\n  save,\n  load,\n  useColors,\n  colors,\n  inspectOpts,\n  formatters,\n}\n\nexport default NodeEnv\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').DebugFunction} _debug.DebugFunction\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Env} _debug.Env\n */","class Debug {\n  /**\n   * Create a debugger with the given `namespace`.\n   * @param {_debug.Env} env\n   */\n  constructor(env) {\n    this.colors = env.colors\n    this.formatArgs = env.formatArgs\n    this.inspectOpts = env.inspectOpts\n    this.log = env.log\n    this.save = env.save\n    this.init = env.init\n\n    this.formatters = env.formatters || {}\n\n    /**\n     * Active `debug` instances.\n     * @type {Array<_debug.DebugFunction>}\n     */\n    this.instances = []\n    /**\n\t   * The currently active debug mode names.\n     * @type {Array<!RegExp>}\n\t   */\n    this.names = []\n    /**\n\t   * The currently active names to skip.\n     * @type {Array<!RegExp>}\n\t   */\n    this.skips = []\n  }\n  createDebug() {\n    const debug = this.getDebug()\n\n    // env-specific initialization logic for debug instances\n    if (typeof this.init == 'function') {\n      this.init(debug)\n    }\n\n    this.instances.push(debug)\n    return debug\n  }\n\n  /**\n   * @returns {_debug.DebugFunction}\n   */\n  getDebug() {\n    const formatters = this.formatters\n    const formatArgs = this.formatArgs\n    const log = this.log // comes from the env\n\n    /** @type {number} */\n    let prevTime\n    /** @type {_debug.DebugFunction} */\n    function debug(...args) {\n      if (!debug.enabled) return\n\n      // Set `diff` timestamp\n      const curr = Number(new Date())\n      const time = curr - (prevTime || curr)\n      debug.diff = time\n      debug.prev = prevTime\n      debug.curr = curr\n      prevTime = curr\n\n      args[0] = coerce(args[0])\n\n      if (typeof args[0] != 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O')\n      }\n\n      // Apply any `formatters` transformations\n      let index = 0\n      args[0] = args[0].replace(/%([a-zA-Z%]+)/g, (match, format) => {\n        // If we encounter an escaped % then don't increase the array index\n        if (match == '%%') {\n          return match\n        }\n        index++\n        const formatter = formatters[format]\n        if (formatter) {\n          const val = args[index]\n          match = formatter.call(debug, val)\n\n          // Now we need to remove `args[index]` since it's inlined in the `format`\n          args.splice(index, 1)\n          index--\n        }\n        return match\n      })\n\n      // Apply env-specific formatting (colors, etc.)\n      formatArgs.call(debug, args)\n\n      const logFn = debug.log || log\n      logFn.apply(debug, args)\n    }\n    return debug\n  }\n  /**\n\t * Selects a color for a debug namespace\n\t * @param {string} namespace The namespace string for the for the debug instance to be colored\n\t * @return {number|string} An ANSI color code for the given namespace\n\t */\n  selectColor(namespace) {\n    let hash = 0\n\n    for (let i = 0; i < namespace.length; i++) {\n      hash = ((hash << 5) - hash) + namespace.charCodeAt(i)\n      hash |= 0 // Convert to 32bit integer\n    }\n\n    return this.colors[Math.abs(hash) % this.colors.length]\n  }\n  /**\n\t * Enables a debug mode by namespaces. This can include modes\n\t * separated by a colon and wildcards.\n\t *\n\t * @param {string} namespaces\n\t * @api public\n\t */\n  enable(namespaces) {\n    this.save(namespaces)\n\n    this.names = []\n    this.skips = []\n\n    let i\n    const split = (typeof namespaces == 'string' ? namespaces : '').split(/[\\s,]+/)\n    const len = split.length\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?')\n\n      if (namespaces[0] == '-') {\n        this.skips.push(new RegExp('^' + namespaces.substr(1) + '$'))\n      } else {\n        this.names.push(new RegExp('^' + namespaces + '$'))\n      }\n    }\n\n    for (i = 0; i < this.instances.length; i++) {\n      const instance = this.instances[i]\n      instance.enabled = this.enabled(instance.namespace)\n    }\n  }\n  destroy(debug) {\n    const index = this.instances.indexOf(debug)\n    if (index !== -1) {\n      this.instances.splice(index, 1)\n      return true\n    }\n    return false\n  }\n  /**\n\t * Disable debug output.\n\t * @return {string} namespaces\n\t */\n  disable() {\n    const namespaces = [\n      ...this.names.map(toNamespace),\n      ...this.skips.map(toNamespace).map(namespace => '-' + namespace),\n    ].join(',')\n    this.enable('')\n    return namespaces\n  }\n  /**\n\t * Returns true if the given mode name is enabled, false otherwise.\n\t * @param {string} name\n\t * @return {boolean}\n\t */\n  enabled(name) {\n    if (name[name.length - 1] == '*') {\n      return true\n    }\n\n    let i\n    let len\n\n    for (i = 0, len = this.skips.length; i < len; i++) {\n      if (this.skips[i].test(name)) {\n        return false\n      }\n    }\n\n    for (i = 0, len = this.names.length; i < len; i++) {\n      if (this.names[i].test(name)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * @param {string} namespace\n * @this {_debug.DebugContext}\n */\nfunction extend(namespace, delimiter) {\n\n}\n\n/**\n * This is the common logic for both the Node.js and web browser implementations of `debug()`.\n * @param {_debug.Env} env\n */\nexport default function setup(env) {\n  const instance = new Debug(env)\n\n  /**\n   * Creates a function to log messages.\n   * @param {string} namespace\n   */\n  function createDebug(namespace) {\n    const debug = instance.createDebug()\n\n    debug.namespace = namespace\n    debug.useColors = env.useColors()\n    debug.enabled = instance.enabled(namespace)\n    debug.color = instance.selectColor(namespace)\n    /** @this {_debug.DebugContext} */\n    debug.destroy = function() {\n      instance.destroy(this)\n    }\n    /** @this {_debug.DebugContext} */\n    debug.extend = function(ns, delimiter) {\n      const newDebug = (this.namespace + (delimiter === undefined ? ':' : delimiter) + ns)\n      newDebug.log = this.log // don't know why this is here\n      return newDebug\n    }\n\n    instance.enable(env.load())\n\n    return debug\n  }\n  return createDebug\n}\n\n/**\n * Convert regexp to namespace.\n *\n * @param {!RegExp} regexp\n * @return {string} namespace\n * @private\n */\nfunction toNamespace(regexp) {\n  return regexp.toString()\n    .substring(2, regexp.toString().length - 2)\n    .replace(/\\.\\*\\?$/, '*')\n}\n\n/**\n * Coerce `val`.\n * @param {!Error|*} val\n * @return {*}\n * @private\n */\nfunction coerce(val) {\n  if (val instanceof Error) {\n    return val.stack || val.message\n  }\n  return val\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').Env} _debug.Env\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').DebugFunction} _debug.DebugFunction\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').DebugContext} _debug.DebugContext\n */","/**\n * @license MIT 2014 Jordan Harband\n * https://github.com/ljharb/is-generator-function\n */\nconst toStr = Object.prototype.toString\nconst fnToStr = Function.prototype.toString\nconst isFnRegex = /^\\s*(?:function)?\\*/\nconst hasToStringTag = typeof Symbol == 'function' && typeof Symbol.toStringTag == 'symbol'\nconst getProto = Object.getPrototypeOf\nconst getGeneratorFunc = function () { // eslint-disable-line consistent-return\n  if (!hasToStringTag) {\n    return false\n  }\n  try {\n    return Function('return function*() {}')()\n  } catch (e) { /**/}\n}\nconst generatorFunc = getGeneratorFunc()\nconst GeneratorFunction = generatorFunc ? getProto(generatorFunc) : {}\n\n/**\n * Check if the function is a generator function.\n * @param {!Function} fn The function to check for being a generator.\n */\nexport default function isGeneratorFunction(fn) {\n  if (typeof fn != 'function') {\n    return false\n  }\n  if (isFnRegex.test(fnToStr.call(fn))) {\n    return true\n  }\n  if (!hasToStringTag) {\n    const str = toStr.call(fn)\n    return str == '[object GeneratorFunction]'\n  }\n  return getProto(fn) == GeneratorFunction\n}","export default http\nexport const {\n  Agent,\n  ClientRequest,\n  IncomingMessage,\n  METHODS,\n  OutgoingMessage,\n  STATUS_CODES,\n  Server,\n  ServerResponse,\n  createServer,\n  get,\n  globalAgent,\n  maxHeaderSize,\n  request,\n} = http","export default stream\nexport const {\n  Duplex,\n  PassThrough,\n  Readable,\n  Stream,\n  Transform,\n  Writable,\n} = stream","export default events\nexport const {\n  EventEmitter,\n} = events","export default assert\nexport const {\n  AssertionError,\n  deepEqual,\n  deepStrictEqual,\n  doesNotThrow,\n  equal,\n  fail,\n  ifError,\n  notDeepEqual,\n  notDeepStrictEqual,\n  notEqual,\n  notStrictEqual,\n  ok,\n  strictEqual,\n  throws,\n} = assert","export default path\nexport const {\n  basename,\n  delimiter,\n  dirname,\n  extname,\n  format,\n  isAbsolute,\n  join,\n  normalize,\n  parse,\n  posix,\n  relative,\n  resolve,\n  sep,\n  win32,\n} = path","export default {\n  [100]: 'Continue',\n  [101]: 'Switching Protocols',\n  [102]: 'Processing',\n  [103]: 'Early Hints',\n  [200]: 'OK',\n  [201]: 'Created',\n  [202]: 'Accepted',\n  [203]: 'Non-Authoritative Information',\n  [204]: 'No Content',\n  [205]: 'Reset Content',\n  [206]: 'Partial Content',\n  [207]: 'Multi-Status',\n  [208]: 'Already Reported',\n  [226]: 'IM Used',\n  [300]: 'Multiple Choices',\n  [301]: 'Moved Permanently',\n  [302]: 'Found',\n  [303]: 'See Other',\n  [304]: 'Not Modified',\n  [305]: 'Use Proxy',\n  [306]: '(Unused)',\n  [307]: 'Temporary Redirect',\n  [308]: 'Permanent Redirect',\n  [400]: 'Bad Request',\n  [401]: 'Unauthorized',\n  [402]: 'Payment Required',\n  [403]: 'Forbidden',\n  [404]: 'Not Found',\n  [405]: 'Method Not Allowed',\n  [406]: 'Not Acceptable',\n  [407]: 'Proxy Authentication Required',\n  [408]: 'Request Timeout',\n  [409]: 'Conflict',\n  [410]: 'Gone',\n  [411]: 'Length Required',\n  [412]: 'Precondition Failed',\n  [413]: 'Payload Too Large',\n  [414]: 'URI Too Long',\n  [415]: 'Unsupported Media Type',\n  [416]: 'Range Not Satisfiable',\n  [417]: 'Expectation Failed',\n  [418]: 'I\\'m a teapot',\n  [421]: 'Misdirected Request',\n  [422]: 'Unprocessable Entity',\n  [423]: 'Locked',\n  [424]: 'Failed Dependency',\n  [425]: 'Unordered Collection',\n  [426]: 'Upgrade Required',\n  [428]: 'Precondition Required',\n  [429]: 'Too Many Requests',\n  [431]: 'Request Header Fields Too Large',\n  [451]: 'Unavailable For Legal Reasons',\n  [500]: 'Internal Server Error',\n  [501]: 'Not Implemented',\n  [502]: 'Bad Gateway',\n  [503]: 'Service Unavailable',\n  [504]: 'Gateway Timeout',\n  [505]: 'HTTP Version Not Supported',\n  [506]: 'Variant Also Negotiates',\n  [507]: 'Insufficient Storage',\n  [508]: 'Loop Detected',\n  [509]: 'Bandwidth Limit Exceeded',\n  [510]: 'Not Extended',\n  [511]: 'Network Authentication Required',\n}\n","/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\nimport statusCodes from './codes'\n\n// status code to message map\nexport const STATUS_CODES = statusCodes\n\n// array of status codes\nexport const codes = populateStatusesMap(status, statusCodes)\n\n// status codes for redirects\nexport const redirect = {\n  [300]: true,\n  [301]: true,\n  [302]: true,\n  [303]: true,\n  [305]: true,\n  [307]: true,\n  [308]: true,\n}\n\n// status codes for empty bodies\nexport const empty = {\n  [204]: true,\n  [205]: true,\n  [304]: true,\n}\n\n// status codes for when you should retry the request\nexport const retry = {\n  [502]: true,\n  [503]: true,\n  [504]: true,\n}\n\n/**\n * Populate the statuses map for given codes.\n * @return {!Array<string>}\n * @private\n */\nfunction populateStatusesMap(statuses, allCodes) {\n  const arr = []\n\n  Object.keys(allCodes).forEach((code) => {\n    const message = statusCodes[code]\n    const s = Number(code)\n\n    // Populate properties\n    statuses[s] = message\n    statuses[message] = s\n    statuses[message.toLowerCase()] = s\n\n    // Add to array\n    arr.push(s)\n  })\n\n  return arr\n}\n\n/**\n * @param {string|number} code\n */\nexport default function status(code) {\n  if (typeof code == 'number') {\n    if (!status[code])\n      throw new Error('invalid status code: ' + code)\n    return code\n  }\n\n  if (typeof code != 'string')\n    throw new TypeError('code must be a number or string')\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    if (!status[n]) throw new Error('invalid status code: ' + n)\n    return n\n  }\n\n  n = status[code.toLowerCase()]\n  if (!n) throw new Error('invalid status message: \"' + code + '\"')\n  return n\n}\n","/*!\n * ee-first\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n/**\n * Get the first event in a set of event emitters and event pairs.\n *\n * @param {!Array} stuff\n * @param {Function} done\n */\nexport default function first(stuff, done) {\n  if (!Array.isArray(stuff))\n    throw new TypeError('arg must be an array of [ee, events...] arrays')\n\n  var cleanups = []\n\n  for (var i = 0; i < stuff.length; i++) {\n    var arr = stuff[i]\n\n    if (!Array.isArray(arr) || arr.length < 2)\n      throw new TypeError('each array member must be [ee, events...]')\n\n    var ee = arr[0]\n\n    for (var j = 1; j < arr.length; j++) {\n      var event = arr[j]\n      var fn = listener(event, callback)\n\n      // listen to the event\n      ee.on(event, fn)\n      // push this listener to the list of cleanups\n      cleanups.push({\n        ee: ee,\n        event: event,\n        fn: fn,\n      })\n    }\n  }\n\n  function callback() {\n    cleanup()\n    done.apply(null, arguments)\n  }\n\n  function cleanup() {\n    var x\n    for (var i = 0; i < cleanups.length; i++) {\n      x = cleanups[i]\n      x.ee.removeListener(x.event, x.fn)\n    }\n  }\n\n  function thunk(fn) {\n    done = fn\n  }\n\n  thunk.cancel = cleanup\n\n  return thunk\n}\n\n/**\n * Create the event listener.\n * @private\n */\nfunction listener(event, done) {\n  return function onevent(arg1) {\n    var args = new Array(arguments.length)\n    var ee = this\n    var err = event == 'error'\n      ? arg1\n      : null\n\n    // copy args to prevent arguments escaping scope\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    done(err, ee, event, args)\n  }\n}\n","/*!\n * on-finished\n * Copyright(c) 2013 Jonathan Ong\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\nimport first from '../ee-first'\n\n/**\n * Invoke callback when the response has finished, useful for\n * cleaning up resources afterwards.\n *\n * @param {!(http.IncomingMessage|http.OutgoingMessage)} msg\n * @param {!Function} listener\n */\nexport default function onFinished(msg, listener) {\n  if (isFinished(msg) !== false) {\n    setImmediate(listener, null, msg)\n    return msg\n  }\n\n  // attach the listener to the message\n  attachListener(msg, listener)\n\n  return msg\n}\n\n/**\n * Determine if message is already finished.\n *\n * @param {!(http.IncomingMessage|http.OutgoingMessage)} msg\n * @public\n */\nexport function isFinished(msg) {\n  const socket = msg.socket\n\n  if (typeof msg.finished == 'boolean') {\n    // OutgoingMessage\n    return Boolean(msg.finished || (socket && !socket.writable))\n  }\n\n  if (typeof msg.complete == 'boolean') {\n    // IncomingMessage\n    /**\n     * @suppress {checkTypes}\n     */\n    const u = msg['upgrade']\n    return Boolean(u || !socket || !socket.readable || (msg.complete && !msg.readable))\n  }\n\n  // don't know\n  return undefined\n}\n\n/**\n * Attach a finished listener to the message.\n *\n * @param {!(http.IncomingMessage|http.OutgoingMessage)} msg\n * @param {Function} callback\n * @private\n */\nfunction attachFinishedListener(msg, callback) {\n  var eeMsg\n  var eeSocket\n  var finished = false\n\n  function onFinish(error) {\n    eeMsg.cancel()\n    eeSocket.cancel()\n\n    finished = true\n    callback(error)\n  }\n\n  // finished on first message event\n  eeMsg = eeSocket = first([[msg, 'end', 'finish']], onFinish)\n\n  function onSocket(socket) {\n    // remove listener\n    msg.removeListener('socket', onSocket)\n\n    if (finished) return\n    if (eeMsg !== eeSocket) return\n\n    // finished on first socket event\n    eeSocket = first([[socket, 'error', 'close']], onFinish)\n  }\n\n  if (msg.socket) {\n    // socket already assigned\n    onSocket(msg.socket)\n    return\n  }\n\n  // wait for socket to be assigned\n  msg.on('socket', onSocket)\n}\n\n/**\n * Attach the listener to the message.\n *\n * @param {!(http.IncomingMessage|http.OutgoingMessage)} msg\n * @private\n */\nfunction attachListener(msg, listener) {\n  var attached = msg.__onFinished\n\n  // create a private single listener with queue\n  if (!attached || !attached.queue) {\n    attached = msg.__onFinished = createListener(msg)\n    attachFinishedListener(msg, attached)\n  }\n\n  attached.queue.push(listener)\n}\n\n/**\n * Create listener on message.\n *\n * @param {!(http.IncomingMessage|http.OutgoingMessage)} msg\n * @return {Function}\n * @private\n */\nfunction createListener(msg) {\n  function listener(err) {\n    if (msg.__onFinished === listener) msg.__onFinished = null\n    if (!listener.queue) return\n\n    var queue = listener.queue\n    listener.queue = null\n\n    for (var i = 0; i < queue.length; i++) {\n      queue[i](err, msg)\n    }\n  }\n\n  listener.queue = []\n\n  return listener\n}\n\n// /**\n//  * Patch ServerResponse.prototype.assignSocket for node.js 0.8.\n//  *\n//  * @param {!http.ServerResponse} res\n//  * @param {Function} callback\n//  * @private\n//  */\n// function patchAssignSocket(res, callback) {\n//   /** @suppress {checkTypes} */\n//   const assignSocket = res['assignSocket']\n\n//   if (typeof assignSocket != 'function') return\n\n//   // res.on('socket', callback) is broken in 0.8\n//   res.assignSocket = function _assignSocket(socket) {\n//     assignSocket.call(this, socket)\n//     callback(socket)\n//   }\n// }\n\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingMessage} http.IncomingMessage\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').OutgoingMessage} http.OutgoingMessage\n */","export default fs\nexport const {\n  ReadStream,\n  Stats,\n  WriteStream,\n  access,\n  accessSync,\n  appendFile,\n  appendFileSync,\n  chmod,\n  chmodSync,\n  chown,\n  chownSync,\n  close,\n  closeSync,\n  constants,\n  copyFile,\n  copyFileSync,\n  createReadStream,\n  createWriteStream,\n  exists,\n  existsSync,\n  fchmod,\n  fchmodSync,\n  fchown,\n  fchownSync,\n  fdatasync,\n  fdatasyncSync,\n  fstat,\n  fstatSync,\n  fsync,\n  fsyncSync,\n  ftruncate,\n  ftruncateSync,\n  futimes,\n  futimesSync,\n  lchmod,\n  lchmodSync,\n  lchown,\n  lchownSync,\n  link,\n  linkSync,\n  lstat,\n  lstatSync,\n  mkdir,\n  mkdirSync,\n  mkdtemp,\n  mkdtempSync,\n  open,\n  openSync,\n  read,\n  readFile,\n  readFileSync,\n  readSync,\n  readdir,\n  readdirSync,\n  readlink,\n  readlinkSync,\n  realpath,\n  realpathSync,\n  rename,\n  renameSync,\n  rmdir,\n  rmdirSync,\n  stat,\n  statSync,\n  symlink,\n  symlinkSync,\n  truncate,\n  truncateSync,\n  unlink,\n  unlinkSync,\n  unwatchFile,\n  utimes,\n  utimesSync,\n  watch,\n  watchFile,\n  write,\n  writeFile,\n  writeFileSync,\n  writeSync,\n} = fs","import { ReadStream } from 'fs'\nimport Stream from 'stream'\n\n/**\n * Destroy a stream.\n * @param {!(Stream|ReadStream)} stream\n */\nexport default function destroy(stream) {\n  if (stream instanceof ReadStream) {\n    return destroyReadStream(stream)\n  }\n\n  if (!(stream instanceof Stream)) {\n    return stream\n  }\n\n  if (typeof stream.destroy == 'function') {\n    stream.destroy()\n  }\n\n  return stream\n}\n\n/**\n * Destroy a ReadStream.\n * @param {!ReadStream} stream\n * @private\n */\nfunction destroyReadStream(stream) {\n  stream.destroy()\n\n  if (typeof stream.close == 'function') {\n    // node.js core bug work-around\n    stream.on('open', onOpenClose)\n  }\n\n  return stream\n}\n\n/**\n * On open handler to close stream.\n * @this {Stream}\n * @private\n */\nfunction onOpenClose() {\n  if (typeof this.fd == 'number') {\n    // actually close down the fd\n    this.close()\n  }\n}\n\n/**\n * @license MIT\n * Copyright(c) 2014 Jonathan Ong\n * https://npmjs.org/destroy\n */","/*!\n * vary\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * RegExp to match field-name in RFC 7230 sec 3.2\n *\n * field-name    = token\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n */\n\nconst FIELD_NAME_REGEXP = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/\n\n/**\n * Append a field to a vary header.\n * @param {string} header\n * @param {string|!Array<string>} field\n */\nexport function append(header, field) {\n  if (typeof header != 'string')\n    throw new TypeError('header argument is required')\n\n  if (!field)\n    throw new TypeError('field argument is required')\n\n  // get fields array\n  const fields = !Array.isArray(field) ? parse(`${field}`) : field\n\n  // assert on invalid field names\n  for (let j = 0; j < fields.length; j++) {\n    if (!FIELD_NAME_REGEXP.test(fields[j])) {\n      throw new TypeError('field argument contains an invalid header name')\n    }\n  }\n\n  // existing, unspecified vary\n  if (header == '*') return header\n\n  // enumerate current values\n  var val = header\n  const vals = parse(header.toLowerCase())\n\n  // unspecified vary\n  if (fields.includes('*') || vals.includes('*'))\n    return '*'\n\n  for (let i = 0; i < fields.length; i++) {\n    const fld = fields[i].toLowerCase()\n\n    // append value (case-preserving)\n    if (!vals.includes(fld)) {\n      vals.push(fld)\n      val = val\n        ? val + ', ' + fields[i]\n        : fields[i]\n    }\n  }\n\n  return val\n}\n\n/**\n * Parse a vary header into an array.\n * @param {string} header\n */\nfunction parse(header) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = header.length; i < len; i++) {\n    switch (header.charCodeAt(i)) {\n    case 0x20: /*   */\n      if (start == end) {\n        start = end = i + 1\n      }\n      break\n    case 0x2c: /* , */\n      list.push(header.substring(start, end))\n      start = end = i + 1\n      break\n    default:\n      end = i + 1\n      break\n    }\n  }\n\n  // final token\n  list.push(header.substring(start, end))\n\n  return list\n}\n\n/**\n * Mark that a request is varied on a header field.\n *\n * @param {http.ServerResponse} res\n * @param {string|!Array<string>} field\n */\nexport default function vary(res, field) {\n  if (!res || !res.getHeader || !res.setHeader) {\n    // quack quack\n    throw new TypeError('res argument is required')\n  }\n\n  // get existing header\n  let val = res.getHeader('Vary') || ''\n  const header = Array.isArray(val)\n    ? val.join(', ')\n    : `${val}`\n\n  // set new header\n  if ((val = append(header, field))) {\n    res.setHeader('Vary', val)\n  }\n}\n\n/* typal types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').ServerResponse} http.ServerResponse\n */\n","const db = require(/* ok depack*/ 'mime-db')\nimport { extname } from 'path'\n\nconst EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nconst TEXT_TYPE_REGEXP = /^text\\//i\n\nexport const charsets = { 'lookup': charset }\n\nexport const extensions = Object.create(null)\nexport const types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(extensions, types)\n\n/**\n * Get the default charset for a MIME type.\n * @param {string} type\n * @return {boolean|string}\n */\nexport function charset(type) {\n  if (!type || typeof type != 'string') return false\n\n  // TODO: use media-typer\n  const match = EXTRACT_TYPE_REGEXP.exec(type)\n  const mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime['charset']) return mime['charset']\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) return 'UTF-8'\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n * @param {string} str\n * @return {boolean|string}\n */\nexport function contentType(str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str != 'string') return false\n\n  let mime = str.indexOf('/') == -1\n    ? lookup(str)\n    : str\n\n  if (!mime) return false\n\n  let m = /** @type {string} */ (mime)\n  // TODO: use content-type or other module\n  if (!m.includes('charset')) {\n    const c = charset(m)\n    if (c) m += '; charset=' + c.toLowerCase()\n  }\n\n  return m\n}\n\n/**\n * Get the default extension for a MIME type.\n * @param {string} type\n * @return {boolean|string}\n */\nexport function extension(type) {\n  if (!type || typeof type != 'string') return false\n\n  // TODO: use media-typer\n  const match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  const exts = match && extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) return false\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n * @param {string} path\n * @return {boolean|string}\n */\nexport function lookup(path) {\n  if (!path || typeof path != 'string') return false\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  let e = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!e) return false\n\n  return types[e] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\nfunction populateMaps(es, ts) {\n  // source preference (least -> most)\n  const preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach((type) => {\n    const mime = db[type]\n    const exts = mime['extensions']\n\n    if (!exts || !exts.length) return\n\n    // mime -> extensions\n    es[type] = exts\n\n    // extension -> mime\n    for (let i = 0; i < exts.length; i++) {\n      const e = exts[i]\n\n      if (ts[e]) {\n        const from = preference.indexOf(db[ts[e]]['source'])\n        const to = preference.indexOf(mime['source'])\n\n        if (ts[e] != 'application/octet-stream' &&\n          (from > to || (from == to && ts[e].substr(0, 12) == 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      ts[e] = type\n    }\n  })\n}\n\n/**\n * @license MIT\n * Copyright (c) 2014 Jonathan Ong <me@jongleberry.com>\n * Copyright (c) 2015 Douglas Christopher Wilson <doug@somethingdoug.com>\n * https://npmjs.com/package/mime-types\n */","/**\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token \"=\" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n */\nconst PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *(\"(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*\"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g\nconst TEXT_REGEXP = /^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/\nconst TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nconst QESC_REGEXP = /\\\\([\\u000b\\u0020-\\u00ff])/g\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6\n */\nconst QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp to match type in RFC 7231 sec 3.1.1.1\n *\n * media-type = type \"/\" subtype\n * type       = token\n * subtype    = token\n */\nconst TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * Format object to media type.\n *\n * @param {!ContentType} obj\n */\nexport function format(obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  const { parameters, type } = obj\n\n  if (!type || !TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  let string = type\n\n  // append parameters\n  if (parameters && typeof parameters == 'object') {\n    let param\n    const params = Object.keys(parameters).sort()\n\n    for (let i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!TOKEN_REGEXP.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n * @param {string|!http.IncomingMessage|!http.ServerResponse} string\n */\nexport function parse(string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  const header = typeof string == 'object'\n    ? getcontenttype(string)\n    : string\n\n  if (typeof header != 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  let index = header.indexOf(';')\n  const type = index != -1\n    ? header.substr(0, index).trim()\n    : header.trim()\n\n  if (!TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid media type')\n  }\n\n  const obj = new ContentType(type.toLowerCase())\n\n  // parse parameters\n  if (index != -1) {\n    let key\n    let match\n    let value\n\n    PARAM_REGEXP.lastIndex = index\n\n    while ((match = PARAM_REGEXP.exec(header))) {\n      if (match.index !== index) {\n        throw new TypeError('invalid parameter format')\n      }\n\n      index += match[0].length\n      key = match[1].toLowerCase()\n      value = match[2]\n\n      if (value[0] == '\"') {\n        // remove quotes and escapes\n        value = value\n          .substr(1, value.length - 2)\n          .replace(QESC_REGEXP, '$1')\n      }\n\n      obj.parameters[key] = value\n    }\n\n    if (index != header.length) {\n      throw new TypeError('invalid parameter format')\n    }\n  }\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {!http.IncomingMessage|!http.ServerResponse|string} obj\n */\nfunction getcontenttype(obj) {\n  let header\n\n  if (typeof obj.getHeader == 'function') {\n    // res-like\n    header = obj.getHeader('content-type')\n  } else if (typeof obj.headers == 'object') {\n    // req-like\n    const h = /** @type {!Object} */ (obj.headers)\n    header = h && h['content-type']\n  }\n\n  if (typeof header != 'string') {\n    throw new TypeError('content-type header is missing from object')\n  }\n\n  return header\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @private\n */\nfunction qstring(val) {\n  const str = String(val)\n\n  // no need to quote tokens\n  if (TOKEN_REGEXP.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !TEXT_REGEXP.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Class to represent a content type.\n * @implements {_goa.ContentType}\n */\nclass ContentType {\n  constructor(type) {\n    this.parameters = {}\n    this.type = type\n  }\n}\n\n/**\n * @license MIT content-type\n * 2015 Douglas Christopher Wilson\n */\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingMessage} http.IncomingMessage\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').ServerResponse} http.ServerResponse\n */\n","/**\n * RegExp to match type in RFC 6838\n *\n * type-name = restricted-name\n * subtype-name = restricted-name\n * restricted-name = restricted-name-first *126restricted-name-chars\n * restricted-name-first  = ALPHA / DIGIT\n * restricted-name-chars  = ALPHA / DIGIT / \"!\" / \"#\" /\n *                          \"$\" / \"&\" / \"-\" / \"^\" / \"_\"\n * restricted-name-chars =/ \".\" ; Characters before first dot always\n *                              ; specify a facet name\n * restricted-name-chars =/ \"+\" ; Characters after last plus always\n *                              ; specify a structured syntax suffix\n * ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z\n * DIGIT =  %x30-39             ; 0-9\n */\nconst SUBTYPE_NAME_REGEXP = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/\nconst TYPE_NAME_REGEXP = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/\nconst TYPE_REGEXP = /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/\n\n/**\n * Format object to media type.\n *\n * @param {MediaType} obj\n */\nexport function format(obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  const { subtype, suffix, type } = obj\n\n  if (!type || !TYPE_NAME_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  if (!subtype || !SUBTYPE_NAME_REGEXP.test(subtype)) {\n    throw new TypeError('invalid subtype')\n  }\n\n  // format as type/subtype\n  let string = [type, subtype].join('/')\n\n  // append +suffix\n  if (suffix) {\n    if (!TYPE_NAME_REGEXP.test(suffix)) {\n      throw new TypeError('invalid suffix')\n    }\n\n    string += '+' + suffix\n  }\n\n  return string\n}\n\n/**\n * Test media type.\n *\n * @param {string} string\n */\nexport function test(string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  if (typeof string != 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  return TYPE_REGEXP.test(string.toLowerCase())\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string} string\n */\nexport function parse(string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  const match = TYPE_REGEXP.exec(string.toLowerCase())\n\n  if (!match) {\n    throw new TypeError('invalid media type')\n  }\n\n  const type = match[1]\n  let subtype = match[2]\n  let suffix\n\n  // suffix after last +\n  const index = subtype.lastIndexOf('+')\n  if (index != -1) {\n    suffix = subtype.substr(index + 1)\n    subtype = subtype.substr(0, index)\n  }\n\n  return new MediaType(type, subtype, suffix)\n}\n\n/**\n * Class for MediaType object.\n */\nclass MediaType {\n  constructor(type, subtype, suffix) {\n    this.type = type\n    this.subtype = subtype\n    this.suffix = suffix\n  }\n}\n\n/**\n * @license MIT media-typer\n * 2014-2017 Douglas Christopher Wilson\n */","import { lookup } from '@goa/mime-types'\nimport { parse } from '@goa/content-type'\nimport http from 'http' // eslint-disable-line\nimport { test } from './media-typer'\n\nexport { typeis as is }\nexport { hasbody as hasBody }\nexport { mimeMatch as match }\n\n/**\n * Compare a `value` content-type with `types`.\n * Each `type` can be an extension like `html`,\n * a special shortcut like `multipart` or `urlencoded`,\n * or a mime type.\n *\n * If no types match, `false` is returned.\n * Otherwise, the first `type` that matches is returned.\n *\n * @param {string} value\n * @param {!Array<string>|string} [types]\n * @param {...string} args\n */\nfunction typeis(value, types, ...args) {\n  let i\n  // remove parameters and normalize\n  const val = tryNormalizeType(value)\n\n  // no type or invalid\n  if (!val) {\n    return false\n  }\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = [types, ...args]\n  }\n\n  // no types, return the content type\n  if (!types || !types.length) {\n    return val\n  }\n\n  let type\n  for (i = 0; i < types.length; i++) {\n    if (mimeMatch(normalize(type = types[i]), val)) {\n      return type[0] == '+' || type.indexOf('*') !== -1\n        ? val\n        : type\n    }\n  }\n\n  // no matches\n  return false\n}\n\n/**\n * Check if a request has a request body.\n * A request with a body __must__ either have `transfer-encoding`\n * or `content-length` headers set.\n * http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.3\n *\n * @param {http.IncomingMessage} req\n */\nfunction hasbody(req) {\n  const headers = /** @type {Object} */ (req.headers)\n  return headers['transfer-encoding'] !== undefined ||\n    !isNaN(headers['content-length'])\n}\n\n/**\n * Check if the incoming request contains the \"Content-Type\"\n * header field, and it contains any of the give mime `type`s.\n * If there is no request body, `null` is returned.\n * If there is no content type, `false` is returned.\n * Otherwise, it returns the first `type` that matches.\n *\n * Examples:\n *\n *     // With Content-Type: text/html; charset=utf-8\n *     this.is('html'); // => 'html'\n *     this.is('text/html'); // => 'text/html'\n *     this.is('text/*', 'application/json'); // => 'text/html'\n *\n *     // When Content-Type is application/json\n *     this.is('json', 'urlencoded'); // => 'json'\n *     this.is('application/json'); // => 'application/json'\n *     this.is('html', 'application/*'); // => 'application/json'\n *\n *     this.is('html'); // => false\n *\n * @param {http.IncomingMessage} req\n * @param {string|!Array<string>} [types]\n * @param {...string} args\n */\nexport default function typeofrequest(req, types, ...args) {\n  // no body\n  if (!hasbody(req)) {\n    return null\n  }\n\n  // support flattened arguments\n  if (arguments.length > 2) {\n    types = [types, ...args]\n  }\n\n  // request content type\n  const headers = /** @type {Object} */ (req.headers)\n  const value = headers['content-type']\n\n  return typeis(value, types)\n}\n\n/**\n * Normalize a mime type.\n * If it's a shorthand, expand it to a valid mime type.\n *\n * In general, you probably want:\n *\n *   var type = is(req, ['urlencoded', 'json', 'multipart']);\n *\n * Then use the appropriate body parsers.\n * These three are the most common request body types\n * and are thus ensured to work.\n *\n * @param {string} type\n * @private\n */\nfunction normalize(type) {\n  if (typeof type != 'string') {\n    // invalid type\n    return false\n  }\n\n  switch (type) {\n  case 'urlencoded':\n    return 'application/x-www-form-urlencoded'\n  case 'multipart':\n    return 'multipart/*'\n  }\n\n  if (type[0] == '+') {\n    // \"+json\" -> \"*/*+json\" expando\n    return '*/*' + type\n  }\n\n  return type.indexOf('/') == -1\n    ? lookup(type)\n    : type\n}\n\n/**\n * Check if `expected` mime type matches `actual` mime type with wildcard and +suffix support.\n *\n * @param {string|boolean} expected\n * @param {string} actual\n * @private\n */\nfunction mimeMatch(expected, actual) {\n  // invalid type\n  if (expected === false) {\n    return false\n  }\n\n  // split types\n  const actualParts = actual.split('/')\n  const expectedParts = expected.split('/')\n\n  // invalid format\n  if (actualParts.length != 2 || expectedParts.length != 2) {\n    return false\n  }\n\n  // validate type\n  if (expectedParts[0] != '*' && expectedParts[0] != actualParts[0]) {\n    return false\n  }\n\n  // validate suffix wildcard\n  if (expectedParts[1].substr(0, 2) == '*+') {\n    return expectedParts[1].length <= actualParts[1].length + 1 &&\n      expectedParts[1].substr(1) == actualParts[1].substr(1 - expectedParts[1].length)\n  }\n\n  // validate subtype\n  if (expectedParts[1] != '*' && expectedParts[1] != actualParts[1]) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Normalize a type and remove parameters.\n * @param {string} value\n * @private\n */\nfunction normalizeType(value) {\n  // parse the type\n  const { type } = parse(value)\n\n  if (!test(type)) {\n    return null\n  }\n\n  return type\n}\n\n/**\n * Try to normalize a type and remove parameters.\n * @param {string} value\n * @private\n */\nfunction tryNormalizeType(value) {\n  if (typeof value != 'string') {\n    return null\n  }\n\n  try {\n    return normalizeType(value)\n  } catch (err) {\n    return null\n  }\n}\n\n/**\n * @license MIT\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * https://npmjs.org/type-is\n */","/*!\n * content-disposition\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\nimport { basename } from 'path'\n\n/**\n * RegExp to match non attr-char, *after* encodeURIComponent (i.e. not including \"%\")\n * @private\n */\n\nvar ENCODE_URL_ATTR_CHAR_REGEXP = /[\\x00-\\x20\"'()*,/:;<=>?@[\\\\\\]{}\\x7f]/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match percent encoding escape.\n * @private\n */\n\nvar HEX_ESCAPE_REGEXP = /%[0-9A-Fa-f]{2}/\nvar HEX_ESCAPE_REPLACE_REGEXP = /%([0-9A-Fa-f]{2})/g\n\n/**\n * RegExp to match non-latin1 characters.\n * @private\n */\n\nvar NON_LATIN1_REGEXP = /[^\\x20-\\x7e\\xa0-\\xff]/g\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n * @private\n */\n\nvar QESC_REGEXP = /\\\\([\\u0000-\\u007f])/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n * @private\n */\n\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp for various RFC 2616 grammar\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * HT            = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n * @private\n */\n\nvar PARAM_REGEXP = /;[\\x09\\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*=[\\x09\\x20]*(\"(?:[\\x20!\\x23-\\x5b\\x5d-\\x7e\\x80-\\xff]|\\\\[\\x20-\\x7e])*\"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*/g // eslint-disable-line no-control-regex\nvar TEXT_REGEXP = /^[\\x20-\\x7e\\x80-\\xff]+$/\nvar TOKEN_REGEXP = /^[!#$%&'*+.0-9A-Z^_`a-z|~-]+$/\n\n/**\n * RegExp for various RFC 5987 grammar\n *\n * ext-value     = charset  \"'\" [ language ] \"'\" value-chars\n * charset       = \"UTF-8\" / \"ISO-8859-1\" / mime-charset\n * mime-charset  = 1*mime-charsetc\n * mime-charsetc = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"%\" / \"&\"\n *               / \"+\" / \"-\" / \"^\" / \"_\" / \"`\"\n *               / \"{\" / \"}\" / \"~\"\n * language      = ( 2*3ALPHA [ extlang ] )\n *               / 4ALPHA\n *               / 5*8ALPHA\n * extlang       = *3( \"-\" 3ALPHA )\n * value-chars   = *( pct-encoded / attr-char )\n * pct-encoded   = \"%\" HEXDIG HEXDIG\n * attr-char     = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"&\" / \"+\" / \"-\" / \".\"\n *               / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n * @private\n */\n\nvar EXT_VALUE_REGEXP = /^([A-Za-z0-9!#$%&+\\-^_`{}~]+)'(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}|[A-Za-z]{4,8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/\n\n/**\n * RegExp for various RFC 6266 grammar\n *\n * disposition-type = \"inline\" | \"attachment\" | disp-ext-type\n * disp-ext-type    = token\n * disposition-parm = filename-parm | disp-ext-parm\n * filename-parm    = \"filename\" \"=\" value\n *                  | \"filename*\" \"=\" ext-value\n * disp-ext-parm    = token \"=\" value\n *                  | ext-token \"=\" ext-value\n * ext-token        = <the characters in token, followed by \"*\">\n * @private\n */\n\nvar DISPOSITION_TYPE_REGEXP = /^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*(?:$|;)/ // eslint-disable-line no-control-regex\n\n/**\n * Create an attachment Content-Disposition header.\n *\n * @param {string} [filename]\n * @param {Object} [options]\n * @param {string} [options.type=attachment]\n * @param {string|boolean} [options.fallback=true]\n */\nexport default function contentDisposition(filename, options = {}) {\n  const { type = 'attachment', fallback = true } = options\n\n  // get parameters\n  const params = createparams(filename, fallback)\n\n  // format into string\n  return format(new ContentDisposition(type, params))\n}\n\n/**\n * Create parameters object from filename and fallback.\n *\n * @param {string} [filename]\n * @param {string|boolean} [fallback=true]\n */\nfunction createparams(filename, fallback = true) {\n  if (filename === undefined) {\n    return\n  }\n\n  var params = {}\n\n  if (typeof filename != 'string') {\n    throw new TypeError('filename must be a string')\n  }\n\n  if (typeof fallback != 'string' && typeof fallback != 'boolean') {\n    throw new TypeError('fallback must be a string or boolean')\n  }\n\n  if (typeof fallback == 'string' && NON_LATIN1_REGEXP.test(fallback)) {\n    throw new TypeError('fallback must be ISO-8859-1 string')\n  }\n\n  // restrict to file base name\n  var name = basename(filename)\n\n  // determine if name is suitable for quoted string\n  var isQuotedString = TEXT_REGEXP.test(name)\n\n  // generate fallback name\n  const fallbackName = typeof fallback != 'string'\n    ? fallback && getlatin1(name)\n    : basename(fallback)\n  const hasFallback = typeof fallbackName == 'string' && fallbackName != name\n\n  // set extended filename parameter\n  if (hasFallback || !isQuotedString || HEX_ESCAPE_REGEXP.test(name)) {\n    params['filename*'] = name\n  }\n\n  // set filename parameter\n  if (isQuotedString || hasFallback) {\n    params.filename = hasFallback\n      ? fallbackName\n      : name\n  }\n\n  return params\n}\n\n/**\n * Format object to Content-Disposition header.\n * @param {!ContentDisposition} obj\n * @private\n */\nfunction format({ parameters, type }) {\n  if (typeof type != 'string' || !TOKEN_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  // start with normalized type\n  let string = `${type}`.toLowerCase()\n\n  // append parameters\n  if (parameters && typeof parameters == 'object') {\n    let param\n    const params = Object.keys(parameters).sort()\n\n    for (let i = 0; i < params.length; i++) {\n      param = params[i]\n\n      const val = param.substr(-1) == '*'\n        ? ustring(parameters[param])\n        : qstring(parameters[param])\n\n      string += '; ' + param + '=' + val\n    }\n  }\n\n  return string\n}\n\n/**\n * Decode a RFC 6987 field value (gracefully).\n *\n * @param {string} str\n * @return {string}\n * @private\n */\n\nfunction decodefield (str) {\n  var match = EXT_VALUE_REGEXP.exec(str)\n\n  if (!match) {\n    throw new TypeError('invalid extended field value')\n  }\n\n  var charset = match[1].toLowerCase()\n  var encoded = match[2]\n  var value\n\n  // to binary string\n  var binary = encoded.replace(HEX_ESCAPE_REPLACE_REGEXP, pdecode)\n\n  switch (charset) {\n  case 'iso-8859-1':\n    value = getlatin1(binary)\n    break\n  case 'utf-8':\n    value = Buffer.from(binary, 'binary').toString('utf8')\n    break\n  default:\n    throw new TypeError('unsupported charset in extended field')\n  }\n\n  return value\n}\n\n/**\n * Get ISO-8859-1 version of string.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction getlatin1 (val) {\n  // simple Unicode -> ISO-8859-1 transformation\n  return String(val).replace(NON_LATIN1_REGEXP, '?')\n}\n\n/**\n * Parse Content-Disposition header string.\n *\n * @param {string} string\n * @return {Object}\n * @public\n */\n\nexport function parse (string) {\n  if (!string || typeof string !== 'string') {\n    throw new TypeError('argument string is required')\n  }\n\n  var match = DISPOSITION_TYPE_REGEXP.exec(string)\n\n  if (!match) {\n    throw new TypeError('invalid type format')\n  }\n\n  // normalize type\n  var index = match[0].length\n  var type = match[1].toLowerCase()\n\n  var key\n  var names = []\n  var params = {}\n  var value\n\n  // calculate index to start at\n  index = PARAM_REGEXP.lastIndex = match[0].substr(-1) === ';'\n    ? index - 1\n    : index\n\n  // match parameters\n  while ((match = PARAM_REGEXP.exec(string))) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (names.indexOf(key) !== -1) {\n      throw new TypeError('invalid duplicate parameter')\n    }\n\n    names.push(key)\n\n    if (key.indexOf('*') + 1 === key.length) {\n      // decode extended value\n      key = key.slice(0, -1)\n      value = decodefield(value)\n\n      // overwrite existing value\n      params[key] = value\n      continue\n    }\n\n    if (typeof params[key] === 'string') {\n      continue\n    }\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1, value.length - 2)\n        .replace(QESC_REGEXP, '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  return new ContentDisposition(type, params)\n}\n\n/**\n * Percent decode a single character.\n *\n * @param {string} str\n * @param {string} hex\n * @return {string}\n * @private\n */\n\nfunction pdecode (str, hex) {\n  return String.fromCharCode(parseInt(hex, 16))\n}\n\n/**\n * Percent encode a single character.\n *\n * @param {string} char\n * @return {string}\n * @private\n */\n\nfunction pencode (char) {\n  return '%' + String(char)\n    .charCodeAt(0)\n    .toString(16)\n    .toUpperCase()\n}\n\n/**\n * Quote a string for HTTP.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Encode a Unicode string for HTTP (RFC 5987).\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction ustring (val) {\n  var str = String(val)\n\n  // percent encode as UTF-8\n  var encoded = encodeURIComponent(str)\n    .replace(ENCODE_URL_ATTR_CHAR_REGEXP, pencode)\n\n  return 'UTF-8\\'\\'' + encoded\n}\n\n/**\n * Class for parsed Content-Disposition header for v8 optimization\n */\nclass ContentDisposition {\n  /**\n   * @param {string} type\n   * @param {Object} parameters\n   */\n  constructor(type, parameters) {\n    this.type = type\n    this.parameters = parameters\n  }\n}","import Stream from 'stream'\n\nexport default function (stream, error) {\n  if (stream instanceof Stream && !stream.listeners('error').includes(error)) {\n    stream.on('error', error)\n  }\n  return stream\n}\n\n/**\n * @license MIT\n * Author dead_horse <dead_horse@qq.com>\n * https://github.com/node-modules/error-inject\n */","import { contentType } from '@goa/mime-types'\n\nexport default type => {\n  let mimeType = typeLRUCache.get(type)\n  if (!mimeType) {\n    mimeType = contentType(type)\n    typeLRUCache.set(type, mimeType)\n  }\n  return mimeType\n}\n\n/**\n * Extends LRU base on hashlru.\n */\nclass LRU {\n  constructor(max) {\n    this.max = max\n    this.size = 0\n    this.cache = new Map()\n    this._cache = new Map()\n  }\n\n  get(key, options = {}) {\n    let item = this.cache.get(key)\n    const { maxAge } = options\n    // only call Date.now() when necessary\n    let now\n    function getNow() {\n      now = now || Date.now()\n      return now\n    }\n    if (item) {\n      // check expired\n      if (item.expired && getNow() > item.expired) {\n        item.expired = 0\n        item.value = undefined\n      } else {\n        // update expired in get\n        if (maxAge !== undefined) {\n          const expired = maxAge ? getNow() + maxAge : 0\n          item.expired = expired\n        }\n      }\n      return item.value\n    }\n\n    // try to read from _cache\n    item = this._cache.get(key)\n    if (item) {\n      // check expired\n      if (item.expired && getNow() > item.expired) {\n        item.expired = 0\n        item.value = undefined\n      } else {\n        // not expired, save to cache\n        this._update(key, item)\n        // update expired in get\n        if (maxAge !== undefined) {\n          const expired = maxAge ? getNow() + maxAge : 0\n          item.expired = expired\n        }\n      }\n      return item.value\n    }\n  }\n\n  set(key, value, options = {}) {\n    const { maxAge } = options\n    const expired = maxAge ? Date.now() + maxAge : 0\n    let item = this.cache.get(key)\n    if (item) {\n      item.expired = expired\n      item.value = value\n    } else {\n      item = {\n        value,\n        expired,\n      }\n      this._update(key, item)\n    }\n  }\n\n  keys() {\n    const cacheKeys = new Set()\n    const now = Date.now()\n\n    for (const entry of this.cache.entries()) {\n      checkEntry(entry)\n    }\n\n    for (const entry of this._cache.entries()) {\n      checkEntry(entry)\n    }\n\n    function checkEntry(entry) {\n      const key = entry[0]\n      const item = entry[1]\n      if (entry[1].value && (!entry[1].expired) || item.expired >= now) {\n        cacheKeys.add(key)\n      }\n    }\n\n    return Array.from(cacheKeys.keys())\n  }\n\n  _update(key, item) {\n    this.cache.set(key, item)\n    this.size++\n    if (this.size >= this.max) {\n      this.size = 0\n      this._cache = this.cache\n      this.cache = new Map()\n    }\n  }\n}\n\nconst typeLRUCache = new LRU(100)\n\n\n/**\n * @license MIT\n * [cache-content-type] Author dead_horse <dead_horse@qq.com>\n * https://github.com/node-modules/cache-content-type\n * [ylru] Author fengmk2\n * https://github.com/node-modules/ylru\n */","/**\n * Check if `body` should be interpreted as json.\n */\nexport default function isJSON(body) {\n  if (!body) return false\n  if ('string' == typeof body) return false\n  if ('function' == typeof body['pipe']) return false\n  if (Buffer.isBuffer(body)) return false\n  return true\n}\n\n/**\n * @license MIT\n * Jonathan Ong\n * https://npmjs.org/koa-is-json\n */\n","/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n\nvar matchHtmlRegExp = /[\"'&<>]/\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n */\nexport default function escapeHtml(string) {\n  var str = '' + string\n  var match = matchHtmlRegExp.exec(str)\n\n  if (!match) {\n    return str\n  }\n\n  var escape\n  var html = ''\n  var index = 0\n  var lastIndex = 0\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n    case 34: // \"\n      escape = '&quot;'\n      break\n    case 38: // &\n      escape = '&amp;'\n      break\n    case 39: // '\n      escape = '&#39;'\n      break\n    case 60: // <\n      escape = '&lt;'\n      break\n    case 62: // >\n      escape = '&gt;'\n      break\n    default:\n      continue\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index)\n    }\n\n    lastIndex = index + 1\n    html += escape\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html\n}\n","export default _crypto\nexport const {\n  Certificate,\n  Cipher,\n  Credentials,\n  DEFAULT_ENCODING,\n  Decipher,\n  DiffieHellman,\n  ECDH,\n  Hash,\n  Hmac,\n  Verify,\n  createCipher,\n  createCipheriv,\n  createCredentials,\n  createDecipher,\n  createDecipheriv,\n  createDiffieHellman,\n  createECDH,\n  createHash,\n  createHmac,\n  createSign,\n  createVerify,\n  getCiphers,\n  getCurves,\n  getDiffieHellman,\n  getHashes,\n  pbkdf2,\n  pbkdf2Sync,\n  privateDecrypt,\n  privateEncrypt,\n  pseudoRandomBytes,\n  publicDecrypt,\n  publicEncrypt,\n  randomBytes,\n  randomFill,\n  randomFillSync,\n  timingSafeEqual,\n} = _crypto","import { createHmac } from 'crypto'\n\nexport function sign(data, algorithm, key, encoding) {\n  return createHmac(algorithm, key)\n    .update(data).digest(encoding)\n    .replace(/\\/|\\+|=/g, (x) => {\n      return ({ '/': '_', '+': '-', '=': '' })[x]\n    })\n}","// http://codahale.com/a-lesson-in-timing-attacks/\nexport const constantTimeCompare = function(val1, val2){\n  if (val1 == null && val2 != null){\n    return false\n  } else if (val2 == null && val1 != null){\n    return false\n  } else if (val1 == null && val2 == null){\n    return true\n  }\n\n  if (val1.length != val2.length){\n    return false\n  }\n\n  var result = 0\n\n  for (var i = 0; i < val1.length; i++) {\n    result |= val1.charCodeAt(i) ^ val2.charCodeAt(i) //Don't short circuit\n  }\n\n  return result === 0\n}\n","import { sign } from './keygrip-lib/sign'\nimport { constantTimeCompare } from './keygrip-lib/ctc'\n\n/* start example */\n/**\n * @implements {_goa.Keygrip}\n */\nexport default class Keygrip {\n  constructor(keys, algorithm = 'sha1', encoding = 'base64') {\n    if (!keys || !(0 in keys)) {\n      throw new Error('Keys must be provided.')\n    }\n    this.algorithm = algorithm\n    this.encoding = encoding\n    this.keys = keys\n  }\n  sign(data) {\n    return sign(data, this.algorithm, this.keys[0], this.encoding)\n  }\n  verify(data, digest) {\n    return this.index(data, digest) > -1\n  }\n  index(data, digest) {\n    for (let i = 0, l = this.keys.length; i < l; i++) {\n      const sig = sign(data, this.algorithm, this.keys[i], this.encoding)\n      if (constantTimeCompare(digest, sig)) return i\n    }\n\n    return -1\n  }\n}\n/* end example */\n\n/*!\n * keygrip\n * Copyright(c) 2011-2014 Jed Schmidt\n * MIT Licensed\n */\n","/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\nconst fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/\n\n/**\n * RegExp to match Same-Site cookie attribute value.\n */\nconst sameSiteRegExp = /^(?:lax|strict)$/i\n\n/**\n * @implements {_goa.CookieAttributes}\n */\nexport default class Cookie {\n  /**\n   * @param {string} name\n   * @param {?string} [value]\n   * @param {!_goa.CookieAttributes} [attrs]\n   */\n  constructor(name, value, attrs) {\n    this.path = '/'\n    this.expires = undefined\n    this.domain = undefined\n    this.maxAge = undefined\n    this.httpOnly = true\n    this.sameSite = false\n    this.secure = false\n    this.overwrite = false\n\n    if (!fieldContentRegExp.test(name)) {\n      throw new TypeError('argument name is invalid')\n    }\n\n    if (value && !fieldContentRegExp.test(value)) {\n      throw new TypeError('argument value is invalid')\n    }\n\n    value || (this.expires = new Date(0))\n\n    this.name = name\n    this.value = value || ''\n\n    for (let n in attrs) {\n      /** @suppress {checkTypes} */\n      this[n] = attrs[n]\n    }\n\n    if (this.path && !fieldContentRegExp.test(this.path)) {\n      throw new TypeError('option path is invalid')\n    }\n\n    if (this.domain && !fieldContentRegExp.test(this.domain)) {\n      throw new TypeError('option domain is invalid')\n    }\n\n    if (this.sameSite && this.sameSite !== true && !sameSiteRegExp.test(this.sameSite)) {\n      throw new TypeError('option sameSite is invalid')\n    }\n  }\n  toHeader() {\n    var header = this.toString()\n\n    if (this.maxAge) this.expires = new Date(Date.now() + this.maxAge)\n\n    if (this.path) header += '; path=' + this.path\n    if (this.expires) header += '; expires=' + this.expires.toUTCString()\n    if (this.domain) header += '; domain=' + this.domain\n    if (this.sameSite) {\n      header += '; samesite='\n      if (this.sameSite === true) header += 'strict'\n      else {\n        /**\n         * @suppress {checkTypes}\n         * @type {string}\n         */\n        const sameSite = this.sameSite.toLowerCase()\n        header += sameSite\n      }\n    }\n    if (this.secure) header += '; secure'\n    if (this.httpOnly) header += '; httponly'\n\n    return header\n  }\n  toString() {\n    return this.name + '=' + this.value\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').CookieAttributes} _goa.CookieAttributes\n */","/*!\n * cookies\n * Copyright(c) 2014 Jed Schmidt, http://jed.is/\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\nimport Keygrip from './Keygrip'\nimport { OutgoingMessage } from 'http'\nimport Cookie from './Cookie'\n\nconst cache = {}\n\n/**\n * @implements {_goa.Cookies}\n */\nexport default class Cookies {\n  /**\n   * Creates a new cookies object to handle cookies.\n   * @param {!http.IncomingMessage} request\n   * @param {!http.ServerResponse} response\n   * @param {!_goa.CookiesOptions} [options] Options for the constructor.\n   */\n  constructor(request, response, options) {\n    this.secure = undefined\n    this.request = request\n    this.response = response\n    if (options) {\n      /** @type {!_goa.Keygrip|undefined} */\n      this.keys = Array.isArray(options.keys) ? new Keygrip(options.keys) : options.keys\n      this.secure = options.secure\n    }\n  }\n  /**\n   * @param {string} name\n   * @param {{ signed: boolean }} [opts]\n   */\n  get(name, opts) {\n    const sigName = `${name}.sig`\n    let header, match, index\n    const signed = opts && opts.signed !== undefined ? opts.signed : !!this.keys\n\n    /** @suppress {checkTypes} */\n    header = this.request.headers['cookie']\n    if (!header) return\n\n    match = header.match(getPattern(name))\n    if (!match) return\n\n    const value = match[1]\n    if (!opts || !signed) return value\n\n    const remote = this.get(sigName)\n    if (!remote) return\n\n    const data = name + '=' + value\n    if (!this.keys) throw new Error('.keys required for signed cookies')\n    index = this.keys.index(data, remote)\n\n    if (index < 0) {\n      this.set(sigName, null, { path: '/', signed: false })\n    } else {\n      index && this.set(sigName, this.keys.sign(data), { signed: false })\n      return value\n    }\n  }\n  /**\n   * @param {string} name The name of the cookie to set.\n   * @param {?string} [value] The value of the cookie to set.\n   * @param {!_goa.CookieSetOptions} [opts] How the cookie will be set.\n   * @param {boolean} [opts.signed=false] Indicating whether the cookie is to be signed. If this is true, another cookie of the same name with the .sig suffix appended will also be sent, with a 27-byte url-safe base64 SHA1 value representing the hash of cookie-name=cookie-value against the first Keygrip key. This signature key is used to detect tampering the next time a cookie is received. Default `false`.\n   */\n  set(name, value, opts = {}) {\n    const { response: res, request: req } = this\n    let headers = /** @type {!Array<string>} */ (res.getHeader('Set-Cookie')) || []\n    if (typeof headers == 'string') headers = [headers]\n\n    /** @suppress {checkTypes} */\n    const proto = req['protocol']\n    /** @suppress {checkTypes} */\n    const encrypted = req.connection['encrypted']\n    let secure = this.secure !== undefined ? !!this.secure : proto == 'https' || encrypted\n\n    const { signed = !!this.keys, ...rest } = opts\n    const cookie = new Cookie(name, value, rest)\n\n    if (!secure && opts.secure) {\n      throw new Error('Cannot send secure cookie over unencrypted connection')\n    }\n\n    cookie.secure = secure\n    if (!('secure' in opts)) cookie.secure = secure\n\n    pushCookie(headers, cookie)\n\n    if (opts && signed) {\n      if (!this.keys) throw new Error('.keys required for signed cookies')\n      cookie.value = this.keys.sign(cookie.toString())\n      cookie.name += '.sig'\n      pushCookie(headers, cookie)\n    }\n\n    /** @suppress {checkTypes} */\n    const set = res['set']\n    const setHeader = set ? OutgoingMessage.prototype.setHeader : res.setHeader\n    setHeader.call(res, 'Set-Cookie', headers)\n    return this\n  }\n}\n\nfunction getPattern(name) {\n  if (cache[name]) return cache[name]\n\n  return cache[name] = new RegExp(\n    '(?:^|;) *' +\n    name.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&') +\n    '=([^;]*)'\n  )\n}\n\n/**\n * @param {!Array<string>} headers\n * @param {!Cookie} cookie\n */\nfunction pushCookie(headers, cookie) {\n  if (cookie.overwrite) {\n    for (var i = headers.length - 1; i >= 0; i--) {\n      if (headers[i].indexOf(cookie.name + '=') === 0) {\n        headers.splice(i, 1)\n      }\n    }\n  }\n\n  headers.push(cookie.toHeader())\n}\n\nexport const connect = (keys) => {\n  return (req, res, next) => {\n    req['cookies'] = res['cookies'] = new Cookies(req, res, { keys })\n    next()\n  }\n}\nexport const express = connect\n\nexport { Keygrip }\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').IncomingMessage} http.IncomingMessage\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').ServerResponse} http.ServerResponse\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').CookieAttributes} _goa.CookieAttributes\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Keygrip} _goa.Keygrip\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').CookiesOptions} _goa.CookiesOptions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').CookieSetOptions} _goa.CookieSetOptions\n */","const simpleCharsetRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/\n\n/**\n * Parse the Accept-Charset header.\n * @param {string} accept\n * @private\n */\nfunction parseAcceptCharset(accept) {\n  const accepts = accept.split(',')\n\n  const res = accepts.map((a, i) => {\n    const charset = parseCharset(a.trim(), i)\n    if (charset) return charset\n  }).filter(Boolean)\n\n  return res\n}\n\n/**\n * Parse a charset from the Accept-Charset header.\n * @param {string} str\n * @param {number} i\n * @private\n */\nfunction parseCharset(str, i) {\n  const match = simpleCharsetRegExp.exec(str)\n  if (!match) return null\n\n  const charset = match[1]\n  let q = 1\n  if (match[2]) {\n    const params = match[2].split(';')\n    for (let j = 0; j < params.length; j++) {\n      const p = params[j].trim().split('=')\n      if (p[0] == 'q') {\n        q = parseFloat(p[1])\n        break\n      }\n    }\n  }\n\n  return { charset, q, i }\n}\n\n/**\n * Get the priority of a charset.\n * @param {string} charset\n * @param {!Array<{ i: number, q: number, charset: string }>} accepted\n * @param {number} index\n */\nfunction getCharsetPriority(charset, accepted, index) {\n  let priority = { o: -1, q: 0, s: 0 }\n\n  for (let i = 0; i < accepted.length; i++) {\n    const spec = specify(charset, accepted[i], index)\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec\n    }\n  }\n\n  return priority\n}\n\n/**\n * Get the specificity of the charset.\n * @param {string} charset\n * @param {{ i: number, q: number, charset: string }} spec\n * @private\n */\nfunction specify(charset, spec, i) {\n  let s = 0\n  if(spec.charset.toLowerCase() === charset.toLowerCase()){\n    s |= 1\n  } else if (spec.charset != '*' ) return null\n\n  return {\n    i,\n    s,\n    o: spec.i,\n    q: spec.q,\n  }\n}\n\n/**\n * Get the preferred charsets from an Accept-Charset header.\n * @param {string} [accept]\n * @param {!Array<string>} [provided]\n */\nexport default function preferredCharsets(accept, provided) {\n  // RFC 2616 sec 14.2: no header = *\n  const accepts = parseAcceptCharset(accept === undefined ? '*' : accept || '')\n\n  if (!provided) {\n    // sorted list of all charsets\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullCharset)\n  }\n\n  const priorities = provided.map((type, i) => {\n    return getCharsetPriority(type, accepts, i)\n  })\n\n  // sorted list of accepted charsets\n  return priorities.filter(isQuality).sort(compareSpecs).map((priority) => {\n    return provided[priorities.indexOf(priority)]\n  })\n}\n\n/**\n * Compare two specs.\n * @param {{ i: number, q: number, charset: string, o: number, s: number }} a\n * @param {{ i: number, q: number, charset: string, o: number, s: number }} b\n * @private\n */\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0\n}\n\n/**\n * Get full charset string.\n * @param {{ charset: string }} spec\n * @private\n */\nfunction getFullCharset(spec) {\n  return spec.charset\n}\n\n/**\n * Check if a spec has any quality.\n * @param {{ q: number }} spec\n * @private\n */\nfunction isQuality(spec) {\n  return spec.q > 0\n}\n","const simpleEncodingRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/\n\n/**\n * Parse the Accept-Encoding header.\n * @private\n */\n\nfunction parseAcceptEncoding(accept) {\n  var accepts = accept.split(',')\n  var hasIdentity = false\n  var minQuality = 1\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var encoding = parseEncoding(accepts[i].trim(), i)\n\n    if (encoding) {\n      accepts[j++] = encoding\n      hasIdentity = hasIdentity || specify('identity', encoding, undefined)\n      minQuality = Math.min(minQuality, encoding.q || 1)\n    }\n  }\n\n  if (!hasIdentity) {\n    /*\n     * If identity doesn't explicitly appear in the accept-encoding header,\n     * it's added to the list of acceptable encoding with the lowest q\n     */\n    accepts[j++] = {\n      encoding: 'identity',\n      q: minQuality,\n      i: i,\n    }\n  }\n\n  // trim accepts\n  accepts.length = j\n\n  return accepts\n}\n\n/**\n * Parse an encoding from the Accept-Encoding header.\n * @private\n */\n\nfunction parseEncoding(str, i) {\n  var match = simpleEncodingRegExp.exec(str)\n  if (!match) return null\n\n  var encoding = match[1]\n  var q = 1\n  if (match[2]) {\n    var params = match[2].split(';')\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].trim().split('=')\n      if (p[0] == 'q') {\n        q = parseFloat(p[1])\n        break\n      }\n    }\n  }\n\n  return {\n    encoding: encoding,\n    q: q,\n    i: i,\n  }\n}\n\n/**\n * Get the priority of an encoding.\n * @private\n */\n\nfunction getEncodingPriority(encoding, accepted, index) {\n  var priority = { o: -1, q: 0, s: 0 }\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(encoding, accepted[i], index)\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec\n    }\n  }\n\n  return priority\n}\n\n/**\n * Get the specificity of the encoding.\n * @private\n */\n\nfunction specify(encoding, spec, index) {\n  var s = 0\n  if(spec.encoding.toLowerCase() === encoding.toLowerCase()){\n    s |= 1\n  } else if (spec.encoding !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s,\n  }\n}\n\n/**\n * Get the preferred encodings from an Accept-Encoding header.\n * @public\n */\nexport default function preferredEncodings(accept, provided) {\n  var accepts = parseAcceptEncoding(accept || '')\n\n  if (!provided) {\n    // sorted list of all encodings\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullEncoding)\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getEncodingPriority(type, accepts, index)\n  })\n\n  // sorted list of accepted encodings\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getEncoding(priority) {\n    return provided[priorities.indexOf(priority)]\n  })\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0\n}\n\n/**\n * Get full encoding string.\n * @private\n */\n\nfunction getFullEncoding(spec) {\n  return spec.encoding\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0\n}","const simpleLanguageRegExp = /^\\s*([^\\s\\-;]+)(?:-([^\\s;]+))?\\s*(?:;(.*))?$/\n\n/**\n * Parse the Accept-Language header.\n * @private\n */\nfunction parseAcceptLanguage(accept) {\n  var accepts = accept.split(',')\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var language = parseLanguage(accepts[i].trim(), i)\n\n    if (language) {\n      accepts[j++] = language\n    }\n  }\n\n  // trim accepts\n  accepts.length = j\n\n  return accepts\n}\n\n/**\n * Parse a language from the Accept-Language header.\n * @private\n */\nfunction parseLanguage(str, i) {\n  var match = simpleLanguageRegExp.exec(str)\n  if (!match) return null\n\n  var prefix = match[1],\n    suffix = match[2],\n    full = prefix\n\n  if (suffix) full += \"-\" + suffix\n\n  var q = 1\n  if (match[3]) {\n    var params = match[3].split(';')\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].split('=')\n      if (p[0] == 'q') q = parseFloat(p[1])\n    }\n  }\n\n  return { prefix, suffix, q, i, full }\n}\n\n/**\n * Get the priority of a language.\n * @private\n */\nfunction getLanguagePriority(language, accepted, index) {\n  var priority = { o: -1, q: 0, s: 0 }\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(language, accepted[i], index)\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec\n    }\n  }\n\n  return priority\n}\n\n/**\n * Get the specificity of the language.\n * @private\n */\n\nfunction specify(language, spec, index) {\n  var p = parseLanguage(language, undefined)\n  if (!p) return null\n  var s = 0\n  if(spec.full.toLowerCase() === p.full.toLowerCase()){\n    s |= 4\n  } else if (spec.prefix.toLowerCase() === p.full.toLowerCase()) {\n    s |= 2\n  } else if (spec.full.toLowerCase() === p.prefix.toLowerCase()) {\n    s |= 1\n  } else if (spec.full !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s,\n  }\n}\n\n/**\n * Get the preferred languages from an Accept-Language header.\n * @public\n */\nexport default function preferredLanguages(accept, provided) {\n  // RFC 2616 sec 14.4: no header = *\n  var accepts = parseAcceptLanguage(accept === undefined ? '*' : accept || '')\n\n  if (!provided) {\n    // sorted list of all languages\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullLanguage)\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getLanguagePriority(type, accepts, index)\n  })\n\n  // sorted list of accepted languages\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getLanguage(priority) {\n    return provided[priorities.indexOf(priority)]\n  })\n}\n\n/**\n * Compare two specs.\n * @private\n */\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0\n}\n\n/**\n * Get full language string.\n * @private\n */\nfunction getFullLanguage(spec) {\n  return spec.full\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\nfunction isQuality(spec) {\n  return spec.q > 0\n}","const simpleMediaTypeRegExp = /^\\s*([^s/;]+)\\/([^;\\s]+)\\s*(?:;(.*))?$/\n\n/**\n * Parse the Accept header.\n * @private\n */\n\nfunction parseAccept(accept) {\n  var accepts = splitMediaTypes(accept)\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var mediaType = parseMediaType(accepts[i].trim(), i)\n\n    if (mediaType) {\n      accepts[j++] = mediaType\n    }\n  }\n\n  // trim accepts\n  accepts.length = j\n\n  return accepts\n}\n\n/**\n * Parse a media type from the Accept header.\n * @private\n */\n\nfunction parseMediaType(str, i) {\n  var match = simpleMediaTypeRegExp.exec(str)\n  if (!match) return null\n\n  var params = Object.create(null)\n  var q = 1\n  var subtype = match[2]\n  var type = match[1]\n\n  if (match[3]) {\n    var kvps = splitParameters(match[3]).map(splitKeyValuePair)\n\n    for (var j = 0; j < kvps.length; j++) {\n      var pair = kvps[j]\n      var key = pair[0].toLowerCase()\n      var val = pair[1]\n\n      // get the value, unwrapping quotes\n      var value = val && val[0] === '\"' && val[val.length - 1] === '\"'\n        ? val.substr(1, val.length - 2)\n        : val\n\n      if (key === 'q') {\n        q = parseFloat(value)\n        break\n      }\n\n      // store parameter\n      params[key] = value\n    }\n  }\n\n  return {\n    type: type,\n    subtype: subtype,\n    params: params,\n    q: q,\n    i: i,\n  }\n}\n\n/**\n * Get the priority of a media type.\n * @private\n */\n\nfunction getMediaTypePriority(type, accepted, index) {\n  var priority = { o: -1, q: 0, s: 0 }\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(type, accepted[i], index)\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec\n    }\n  }\n\n  return priority\n}\n\n/**\n * Get the specificity of the media type.\n * @private\n */\n\nfunction specify(type, spec, index) {\n  var p = parseMediaType(type, undefined)\n  var s = 0\n\n  if (!p) {\n    return null\n  }\n\n  if(spec.type.toLowerCase() == p.type.toLowerCase()) {\n    s |= 4\n  } else if(spec.type != '*') {\n    return null\n  }\n\n  if(spec.subtype.toLowerCase() == p.subtype.toLowerCase()) {\n    s |= 2\n  } else if(spec.subtype != '*') {\n    return null\n  }\n\n  var keys = Object.keys(spec.params)\n  if (keys.length > 0) {\n    if (keys.every(function (k) {\n      return spec.params[k] == '*' || (spec.params[k] || '').toLowerCase() == (p.params[k] || '').toLowerCase()\n    })) {\n      s |= 1\n    } else {\n      return null\n    }\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s,\n  }\n}\n\nexport default function preferredMediaTypes(accept, provided) {\n  // RFC 2616 sec 14.2: no header = */*\n  var accepts = parseAccept(accept === undefined ? '*/*' : accept || '')\n\n  if (!provided) {\n    // sorted list of all types\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullType)\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getMediaTypePriority(type, accepts, index)\n  })\n\n  // sorted list of accepted types\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getType(priority) {\n    return provided[priorities.indexOf(priority)]\n  })\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0\n}\n\n/**\n * Get full type string.\n * @private\n */\n\nfunction getFullType(spec) {\n  return spec.type + '/' + spec.subtype\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0\n}\n\n/**\n * Count the number of quotes in a string.\n * @private\n */\n\nfunction quoteCount(string) {\n  var count = 0\n  var index = 0\n\n  while ((index = string.indexOf('\"', index)) !== -1) {\n    count++\n    index++\n  }\n\n  return count\n}\n\n/**\n * Split a key value pair.\n * @private\n */\n\nfunction splitKeyValuePair(str) {\n  var index = str.indexOf('=')\n  var key\n  var val\n\n  if (index === -1) {\n    key = str\n  } else {\n    key = str.substr(0, index)\n    val = str.substr(index + 1)\n  }\n\n  return [key, val]\n}\n\n/**\n * Split an Accept header into media types.\n * @private\n */\n\nfunction splitMediaTypes(accept) {\n  var accepts = accept.split(',')\n\n  for (var i = 1, j = 0; i < accepts.length; i++) {\n    if (quoteCount(accepts[j]) % 2 == 0) {\n      accepts[++j] = accepts[i]\n    } else {\n      accepts[j] += ',' + accepts[i]\n    }\n  }\n\n  // trim accepts\n  accepts.length = j + 1\n\n  return accepts\n}\n\n/**\n * Split a string of parameters.\n * @private\n */\n\nfunction splitParameters(str) {\n  var parameters = str.split(';')\n\n  for (var i = 1, j = 0; i < parameters.length; i++) {\n    if (quoteCount(parameters[j]) % 2 == 0) {\n      parameters[++j] = parameters[i]\n    } else {\n      parameters[j] += ';' + parameters[i]\n    }\n  }\n\n  // trim parameters\n  parameters.length = j + 1\n\n  for (var i = 0; i < parameters.length; i++) {\n    parameters[i] = parameters[i].trim()\n  }\n\n  return parameters\n}\n","import preferredCharsets from './lib/charset'\nimport preferredEncodings from './lib/encoding'\nimport preferredLanguages from './lib/language'\nimport preferredMediaTypes from './lib/mediaType'\nimport * as http from 'http' // eslint-disable-line\n\n/**\n * @implements {_goa.Negotiator}\n */\nexport default class Negotiator {\n  /** @param {!http.IncomingMessage} request */\n  constructor(request) {\n    this.request = request\n    this.headers = /** @type {!Object} */ (this.request.headers)\n  }\n  /** @param {!Array<string>} [available] */\n  charset(available) {\n    const set = this.charsets(available)\n    return set && set[0]\n  }\n  /** @param {!Array<string>} [available] */\n  charsets(available) {\n    return preferredCharsets(this.headers['accept-charset'], available)\n  }\n  /** @param {!Array<string>} [available] */\n  encoding(available) {\n    var set = this.encodings(available)\n    return set && set[0]\n  }\n  /** @param {!Array<string>} [available] */\n  encodings(available) {\n    return preferredEncodings(this.headers['accept-encoding'], available)\n  }\n  /** @param {!Array<string>} [available] */\n  language(available) {\n    var set = this.languages(available)\n    return set && set[0]\n  }\n  /** @param {!Array<string>} [available] */\n  languages(available) {\n    return preferredLanguages(this.headers['accept-language'], available)\n  }\n  /** @param {!Array<string>} [available] */\n  mediaType(available) {\n    var set = this.mediaTypes(available)\n    return set && set[0]\n  }\n  /** @param {!Array<string>} [available] */\n  mediaTypes(available) {\n    return preferredMediaTypes(this.headers['accept'], available)\n  }\n}\n\n/**\n * @license MIT\n * Copyright(c) 2012 Federico Romero\n * Copyright(c) 2012-2014 Isaac Z. Schlueter\n * Copyright(c) 2015 Douglas Christopher Wilson\n * https://npmjs.org/negotiator\n */\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingMessage} http.IncomingMessage\n */","import Negotiator from '@goa/negotiator'\nimport { lookup } from '@goa/mime-types'\n\n/**\n * @implements {_goa.Accepts}\n */\nexport default class Accepts {\n  /**\n   * Create a new Accepts object for the given req.\n   * @param {!http.IncomingMessage} req\n   */\n  constructor(req) {\n    this.headers = /** @type {!Object} */ (req.headers)\n    this.negotiator = new Negotiator(req)\n  }\n  /**\n   * Check if the given `type(s)` is acceptable, returning the best match when true, otherwise `false`, in which case you should respond with 406 \"Not Acceptable\".\n   *\n   * The `type` value may be a single mime type string such as \"application/json\", the extension name such as \"json\" or an array `[\"json\", \"html\", \"text/plain\"]`. When a list or array is given the _best_ match, if any is returned. When no types are given as arguments, returns all types accepted by the client in the preference order.\n   *\n   * @param {string|!Array<string>} [types] A single or multiple types, either as an array or variable arguments.\n   * @param {...string} args\n   */\n  types(types, ...args) {\n    // support flattened arguments\n    if (types && !Array.isArray(types)) {\n      types = [types, ...args]\n    }\n\n    // no types, return all requested types\n    if (!types || types.length == 0) {\n      return this.negotiator.mediaTypes()\n    }\n\n    // no accept header, return first given type\n    if (!this.headers['accept']) {\n      return types[0]\n    }\n\n    const mimes = types.map(extToMime)\n    const accepts = this.negotiator.mediaTypes(mimes.filter(validMime))\n    const [first] = accepts\n\n    return first\n      ? types[mimes.indexOf(first)]\n      : false\n  }\n  get type() {\n    return this.types\n  }\n  /**\n   * Return accepted encodings or best fit based on `encodings`.\n   *\n   * Given `Accept-Encoding: gzip, deflate`\n   * an array sorted by quality is returned:\n   *\n   *     ['gzip', 'deflate']\n   *\n   * @param {string|!Array<string>} [encodings]\n   * @param {...string} args\n   */\n  encodings(encodings, ...args) {\n    // support flattened arguments\n    if (encodings && !Array.isArray(encodings)) {\n      encodings = [encodings, ...args]\n    }\n\n    // no encodings, return all requested encodings\n    if (!encodings || encodings.length == 0) {\n      return this.negotiator.encodings()\n    }\n\n    return this.negotiator.encodings( /** @type {!Array<string>} */\n      (encodings))[0] || false\n  }\n  get encoding() {\n    return this.encodings\n  }\n  /**\n   * Return accepted charsets or best fit based on `charsets`.\n   *\n   * Given `Accept-Charset: utf-8, iso-8859-1;q=0.2, utf-7;q=0.5`\n   * an array sorted by quality is returned:\n   *\n   *     ['utf-8', 'utf-7', 'iso-8859-1']\n   *\n   * @param {string|!Array<string>} [charsets]\n   * @param {...string} args\n   */\n  charsets(charsets, ...args) {\n    // support flattened arguments\n    if (charsets && !Array.isArray(charsets)) {\n      charsets = [charsets, ...args]\n    }\n\n    // no charsets, return all requested charsets\n    if (!charsets || charsets.length == 0) {\n      return this.negotiator.charsets()\n    }\n\n    return this.negotiator.charsets( /** @type {!Array<string>} */\n      (charsets))[0] || false\n  }\n  get charset() {\n    return this.charsets\n  }\n  /**\n   * Return accepted languages or best fit based on `langs`.\n   *\n   * Given `Accept-Language: en;q=0.8, es, pt`\n   * an array sorted by quality is returned:\n   *\n   *     ['es', 'pt', 'en']\n   *\n   * @param {string|!Array<string>} [languages]\n   * @param {...string} args\n   */\n  languages(languages, ...args) {\n    // support flattened arguments\n    if (languages && !Array.isArray(languages)) {\n      languages = [languages, ...args]\n    }\n\n    // no languages, return all requested languages\n    if (!languages || languages.length == 0) {\n      return this.negotiator.languages()\n    }\n\n    return this.negotiator.languages(\n      /** @type {!Array<string>} */ (languages))[0] || false\n  }\n  get lang() {\n    return this.languages\n  }\n  get langs() {\n    return this.languages\n  }\n  get language() {\n    return this.languages\n  }\n}\n\n/**\n * Convert extnames to mime.\n * @param {string} type\n * @private\n */\nfunction extToMime(type) {\n  return type.indexOf('/') == -1\n    ? lookup(type)\n    : type\n}\n\n/**\n * Check if mime is valid.\n * @param {string} type\n * @private\n */\nfunction validMime(type) {\n  return typeof type == 'string'\n}\n\n/**\n * @license MIT\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * https://npmjs.org/accepts\n */\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingMessage} http.IncomingMessage\n */","/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\nimport statuses, { codes } from '@goa/statuses'\n\nconst deprecate = (msg) => {\n  process.emitWarning(msg, 'DeprecationWarning')\n}\n\n/**\n * Get the code class of a status code.\n * @private\n */\nfunction codeClass(status) {\n  return Number(String(status).charAt(0) + '00')\n}\n\n/**\n * Create a new HTTP Error.\n * @param {...Error|string|number} args\n */\nexport default function createError(...args) {\n  // so much arity going on ~_~\n  let err\n  let msg\n  let status = 500\n  let props = {}\n  for (let i = 0; i < args.length; i++) {\n    let arg = args[i]\n    if (arg instanceof Error) {\n      err = arg\n      status = err.status || err.statusCode || status\n      continue\n    }\n    switch (typeof arg) {\n    case 'string':\n      msg = arg\n      break\n    case 'number':\n      status = arg\n      if (i !== 0) {\n        deprecate('non-first-argument status code; replace with createError(' + arg + ', ...)')\n      }\n      break\n    case 'object':\n      props = arg\n      break\n    }\n  }\n\n  if (typeof status == 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes')\n  }\n\n  if (typeof status != 'number' ||\n    (!statuses[status] && (status < 400 || status >= 600))) {\n    status = 500\n  }\n\n  // constructor\n  const HttpError = createError[status] || createError[codeClass(status)]\n\n  if (!err) {\n    // create error\n    err = HttpError\n      ? new HttpError(msg)\n      : new Error(msg || statuses[status])\n    Error.captureStackTrace(err, createError)\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500\n    err.status = err.statusCode = status\n  }\n\n  for (let key in props) {\n    if (key != 'status' && key != 'statusCode') {\n      err[key] = props[key]\n    }\n  }\n\n  return err\n}\n\n/**\n * @implements {_httpErrors.HttpError}\n */\nexport class HttpError extends Error {\n  constructor(message) {\n    super()\n    this.message = message\n    this.status = null\n    this.statusCode = null\n    this.expose = false\n    this.headers = null\n  }\n  set code(code) {\n    this.status = code\n    this.statusCode = code\n    if (!this.message) this.message = statuses[code]\n  }\n}\n\ncodes.forEach((code) => {\n  let CodeError\n  const name = toIdentifier(statuses[code])\n  const className = name.match(/Error$/) ? name : name + 'Error'\n\n  switch (codeClass(code)) {\n  case 400:\n    CodeError = class ClientError extends HttpError {\n      constructor(message) {\n        super(message)\n        this.code = code\n        this.name = className\n        this.expose = true\n      }\n    }\n    break\n  case 500:\n    CodeError = class ServerError extends HttpError {\n      constructor(message) {\n        super(message)\n        this.code = code\n        this.name = className\n        this.expose = false\n      }\n    }\n    break\n  }\n\n  if (CodeError) {\n    // export the constructor\n    createError[code] = CodeError\n    createError[name] = CodeError\n  }\n}, {})\n\n\n\n/**\n * Transform the given string into a JavaScript identifier\n * @param {string} str\n */\nfunction toIdentifier(str) {\n  return str\n    .split(' ')\n    .map(function (token) {\n      return token.slice(0, 1).toUpperCase() + token.slice(1)\n    })\n    .join('')\n    .replace(/[^ _0-9a-z]/gi, '')\n}\n\n/*!\n * toidentifier\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */","/**\n * Creates a delegator instance used to configure using the `prop` on the given\n`proto` object (which is usually a prototype).\n */\nexport default class Delegator {\n  /**\n   * Initialize a delegator.\n   * @param {!Object} proto\n   * @param {string} target\n   */\n  constructor(proto, target) {\n    this.proto = proto\n    this.target = target\n    /** @type {!Array<string>} */\n    this.methods = []\n    /** @type {!Array<string>} */\n    this.getters = []\n    /** @type {!Array<string>} */\n    this.setters = []\n    /** @type {!Array<string>} */\n    this.fluents = []\n  }\n  /**\n   * Delegate method `name`.\n   * @param {string} name\n   * @return {Delegator} self\n   */\n  method(name) {\n    const proto = this.proto\n    const target = this.target\n    this.methods.push(name)\n\n    proto[name] = function() {\n      return this[target][name].apply(this[target], arguments)\n    }\n\n    return this\n  }\n  /**\n   * Delegator accessor `name`.\n   * @param {string} name\n   * @return {Delegator} self\n   */\n  access(name) {\n    return this.getter(name).setter(name)\n  }\n  /**\n   * Delegator getter `name`.\n   * @param {string} name\n   * @return {Delegator} self\n   */\n  getter(name) {\n    const proto = this.proto\n    const target = this.target\n    this.getters.push(name)\n\n    proto.__defineGetter__(name, function() {\n      return this[target][name]\n    })\n\n    return this\n  }\n  /**\n   * Delegator setter `name`.\n   * @param {string} name\n   * @return {Delegator} self\n   */\n  setter(name) {\n    var proto = this.proto\n    var target = this.target\n    this.setters.push(name)\n\n    proto.__defineSetter__(name, function(val) {\n      return this[target][name] = val\n    })\n\n    return this\n  }\n  /**\n   * Delegator fluent accessor.\n   * @param {string} name\n   * @return {Delegator} self\n   */\n  fluent(name) {\n    var proto = this.proto\n    var target = this.target\n    this.fluents.push(name)\n\n    proto[name] = function(val ){\n      if (val !== undefined) {\n        this[target][name] = val\n        return this\n      } else {\n        return this[target][name]\n      }\n    }\n\n    return this\n  }\n}\n\n/**\n * @license MIT Copyright (c) 2015 TJ Holowaychuk <tj@vision-media.ca>\n * https://npmjs.org/delegates\n */","import createError from '@goa/http-errors'\n\n/**\n * @suppress {checkTypes}\n */\nexport default function assert(value, status, msg, opts) {\n  if (value) return\n  throw createError(status, msg, opts)\n}\n\n/**\n * @license MIT jshttp/http-assert\n */","export default url\nexport const {\n  URL,\n  URLSearchParams,\n  Url,\n  domainToASCII,\n  domainToUnicode,\n  format,\n  parse,\n  resolve,\n} = url","export default net\nexport const {\n  Server,\n  Socket,\n  Stream,\n  connect,\n  createConnection,\n  createServer,\n  isIP,\n  isIPv4,\n  isIPv6,\n} = net","export default querystring\nexport const {\n  decode,\n  encode,\n  escape,\n  parse,\n  stringify,\n  unescape,\n} = querystring","/*!\n * parseurl\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\nimport { parse, Url } from 'url'\n\n/**\n * Parse the `req` url with memoization.\n *\n * @param {http.IncomingMessage} req\n */\nexport default function parseurl (req) {\n  var url = req.url\n\n  if (url === undefined) {\n    // URL is undefined\n    return undefined\n  }\n\n  var parsed = req._parsedUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedUrl = parsed)\n}\n\n/**\n * Parse the `req` original url with fallback and memoization.\n *\n * @param {http.IncomingMessage} req\n */\n\nexport function original (req) {\n  const url = req.originalUrl\n\n  if (typeof url !== 'string') {\n    // Fallback\n    return parseurl(req)\n  }\n\n  var parsed = req._parsedOriginalUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedOriginalUrl = parsed)\n}\n\n/**\n * Parse the `str` url with fast-path short-cut.\n *\n * @param {string} str\n * @return {Object}\n * @private\n */\n\nfunction fastparse (str) {\n  if (typeof str !== 'string' || str.charCodeAt(0) !== 0x2f /* / */) {\n    return parse(str)\n  }\n\n  var pathname = str\n  var query = null\n  var search = null\n\n  // This takes the regexp from https://github.com/joyent/node/pull/7878\n  // Which is /^(\\/[^?#\\s]*)(\\?[^#\\s]*)?$/\n  // And unrolls it into a for loop\n  for (var i = 1; i < str.length; i++) {\n    switch (str.charCodeAt(i)) {\n    case 0x3f: /* ?  */\n      if (search === null) {\n        pathname = str.substring(0, i)\n        query = str.substring(i + 1)\n        search = str.substring(i)\n      }\n      break\n    case 0x09: /* \\t */\n    case 0x0a: /* \\n */\n    case 0x0c: /* \\f */\n    case 0x0d: /* \\r */\n    case 0x20: /*    */\n    case 0x23: /* #  */\n    case 0xa0:\n    case 0xfeff:\n      return parse(str)\n    }\n  }\n\n  var url = Url !== undefined\n    ? new Url()\n    : {}\n\n  url['path'] = str\n  url['href'] = str\n  url['pathname'] = pathname\n\n  if (search !== null) {\n    url['query'] = query\n    url['search'] = search\n  }\n\n  return url\n}\n\n/**\n * Determine if parsed is still fresh for url.\n *\n * @param {string} url\n * @param {Object} parsedUrl\n * @private\n */\nfunction fresh (url, parsedUrl) {\n  return typeof parsedUrl === 'object' &&\n    parsedUrl !== null &&\n    (Url === undefined || parsedUrl instanceof Url) &&\n    parsedUrl['_raw'] === url\n}\n\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingMessage} http.IncomingMessage\n */","/*!\n * fresh\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * RegExp to check for no-cache token in Cache-Control.\n * @private\n */\n\nvar CACHE_CONTROL_NO_CACHE_REGEXP = /(?:^|,)\\s*?no-cache\\s*?(?:,|$)/\n\n/**\n * Check freshness of the response using request and response headers.\n *\n * @param {Object} reqHeaders\n * @param {Object} resHeaders\n * @public\n */\n\nexport default function fresh (reqHeaders, resHeaders) {\n  // fields\n  var modifiedSince = reqHeaders['if-modified-since']\n  var noneMatch = reqHeaders['if-none-match']\n\n  // unconditional request\n  if (!modifiedSince && !noneMatch) {\n    return false\n  }\n\n  // Always return stale when Cache-Control: no-cache\n  // to support end-to-end reload requests\n  // https://tools.ietf.org/html/rfc2616#section-14.9.4\n  var cacheControl = reqHeaders['cache-control']\n  if (cacheControl && CACHE_CONTROL_NO_CACHE_REGEXP.test(cacheControl)) {\n    return false\n  }\n\n  // if-none-match\n  if (noneMatch && noneMatch !== '*') {\n    var etag = resHeaders['etag']\n\n    if (!etag) {\n      return false\n    }\n\n    var etagStale = true\n    var matches = parseTokenList(noneMatch)\n    for (var i = 0; i < matches.length; i++) {\n      var match = matches[i]\n      if (match === etag || match === 'W/' + etag || 'W/' + match === etag) {\n        etagStale = false\n        break\n      }\n    }\n\n    if (etagStale) {\n      return false\n    }\n  }\n\n  // if-modified-since\n  if (modifiedSince) {\n    var lastModified = resHeaders['last-modified']\n    var modifiedStale = !lastModified || !(parseHttpDate(lastModified) <= parseHttpDate(modifiedSince))\n\n    if (modifiedStale) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Parse an HTTP Date into a number.\n *\n * @param {string} date\n * @private\n */\n\nfunction parseHttpDate (date) {\n  var timestamp = date && Date.parse(date)\n\n  // istanbul ignore next: guard against date.js Date.parse patching\n  return typeof timestamp === 'number'\n    ? timestamp\n    : NaN\n}\n\n/**\n * Parse a HTTP token list.\n *\n * @param {string} str\n * @private\n */\n\nfunction parseTokenList (str) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(str.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(str.substring(start, end))\n\n  return list\n}\n","import { URL, format as stringify } from 'url'\nimport { isIP } from 'net'\nimport Accepts from '@goa/accepts'\nimport { parse as qsParse, stringify as qsStringify } from 'querystring'\nimport typeis from '@goa/type-is'\nimport { parse as parseContentType } from '@goa/content-type'\nimport parse from '../modules/parseurl'\nimport fresh from '../modules/fresh'\n\nimport { inspect } from 'util'\n\nimport Context from './context' // eslint-disable-line\nimport Response from './response' // eslint-disable-line\n\nconst IP = Symbol('context#ip')\n\n/**\n * The request implementation.\n * @implements {_goa.Request}\n */\nexport default class Request {\n  constructor() {\n    /**\n     * @suppress {checkTypes}\n     * @type {?_goa.Application}\n     */\n    this.app = null\n    /**\n     * @suppress {checkTypes}\n     * @type {?Context}\n     */\n    this.ctx = null\n    /**\n     * @suppress {checkTypes}\n     * @type {?Response}\n     */\n    this.response = null\n    /**\n     * @suppress {checkTypes}\n     * @type {http.IncomingMessage}\n     */\n    this.req = null\n    /**\n     * @suppress {checkTypes}\n     * @type {http.ServerResponse}\n     */\n    this.res = null\n    /** @type {string} */\n    this.originalUrl = ''\n    /** @type {Object} */\n    this._querycache = {}\n    /** @type {URL|Object} */\n    this.memoizedURL = null\n    /** @type {?string} */\n    this.IP = null\n    /** @type {_goa.Accepts} */\n    this._accept = null\n  }\n  /**\n   * Return request header.\n   */\n  get header() {\n    return this.req.headers\n  }\n\n  /**\n   * Set request header.\n   */\n  set header(val) {\n    this.req.headers = val\n  }\n\n  /**\n   * Return request header, alias as request.header\n   */\n  get headers() {\n    return this.req.headers\n  }\n\n  /**\n   * Set request header, alias as request.header\n   */\n  set headers(val) {\n    this.req.headers = val\n  }\n\n  /**\n   * Get request URL.\n   */\n  get url() {\n    return this.req.url\n  }\n\n  /**\n   * Set request URL.\n   */\n  set url(val) {\n    this.req.url = val\n  }\n\n  /**\n   * Get origin of URL.\n   * @return {string}\n   */\n  get origin() {\n    return `${this.protocol}://${this.host}`\n  }\n\n  /**\n   * Get full request URL.\n   */\n  get href() {\n    // support: `GET http://example.com/foo`\n    if (/^https?:\\/\\//i.test(this.originalUrl)) return this.originalUrl\n    return this.origin + this.originalUrl\n  }\n\n  /**\n   * Get request method.\n   */\n  get method() {\n    return this.req.method\n  }\n\n  /**\n   * Set request method.\n   */\n  set method(val) {\n    this.req.method = val\n  }\n\n  /**\n   * Get request pathname.\n   */\n  get path() {\n    return parse(/** @type {!http.IncomingMessage} */ (this.req)).pathname\n  }\n\n  /**\n   * Set pathname, retaining the query-string when present.\n   */\n  set path(path) {\n    const url = parse(/** @type {!http.IncomingMessage} */ (this.req))\n    if (url.pathname === path) return\n\n    url.pathname = path\n    url.path = null\n\n    this.url = stringify(url)\n  }\n\n  /**\n   * Get parsed query-string.\n   * @return {Object}\n   */\n  get query() {\n    const str = this.querystring\n    const c = this._querycache = this._querycache || {}\n    return c[str] || (c[str] = qsParse(str))\n  }\n\n  /**\n   * Set query-string as an object.\n   */\n  set query(obj) {\n    this.querystring = qsStringify(obj)\n  }\n\n  /**\n   * Get query string.\n   */\n  get querystring() {\n    if (!this.req) return ''\n    return parse(/** @type {!http.IncomingMessage} */ (this.req)).query || ''\n  }\n\n  /**\n   * Set querystring.\n   */\n  set querystring(str) {\n    const url = parse(/** @type {!http.IncomingMessage} */ (this.req))\n    if (url.search === `?${str}`) return\n\n    url.search = str\n    url.path = null\n\n    this.url = stringify(url)\n  }\n\n  /**\n   * Get the search string. Same as the querystring\n   * except it includes the leading ?.\n   */\n  get search() {\n    if (!this.querystring) return ''\n    return `?${this.querystring}`\n  }\n\n  /**\n   * Set the search string. Same as\n   * request.querystring= but included for ubiquity.\n   */\n  set search(str) {\n    this.querystring = str\n  }\n\n  /**\n   * Parse the \"Host\" header field host\n   * and support X-Forwarded-Host when a\n   * proxy is enabled. Returns hostname:port\n   */\n  get host() {\n    const { proxy } = this.app\n    let host = proxy && this.get('X-Forwarded-Host')\n    if (!host) {\n      if (this.req.httpVersionMajor >= 2) host = this.get(':authority')\n      if (!host) host = this.get('Host')\n    }\n    if (!host) return ''\n    return host.split(/\\s*,\\s*/, 1)[0]\n  }\n\n  /**\n   * Parse the \"Host\" header field hostname\n   * and support X-Forwarded-Host when a\n   * proxy is enabled.\n   */\n  get hostname() {\n    const host = this.host\n    if (!host) return ''\n    if ('[' == host[0]) return this.URL.hostname || '' // IPv6\n    return host.split(':', 1)[0]\n  }\n\n  /**\n   * Get WHATWG parsed URL.\n   * Lazily memoized.\n   */\n  get URL() {\n    if (!this.memoizedURL) {\n      const originalUrl = this.originalUrl || '' // avoid undefined in template string\n      try {\n        this.memoizedURL = new URL(`${this.origin}${originalUrl}`)\n      } catch (err) {\n        this.memoizedURL = Object.create(null)\n      }\n    }\n    return this.memoizedURL\n  }\n\n  /**\n   * Check if the request is fresh, aka\n   * Last-Modified and/or the ETag\n   * still match.\n   */\n  get fresh() {\n    const method = this.method\n    const s = this.ctx.status // todo\n\n    // GET or HEAD for weak freshness validation only\n    if ('GET' != method && 'HEAD' != method) return false\n\n    // 2xx or 304 as per rfc2616 14.26\n    if ((s >= 200 && s < 300) || 304 == s) {\n      return fresh(this.header, this.response.header)\n    }\n\n    return false\n  }\n\n  /**\n   * Check if the request is stale, aka\n   * \"Last-Modified\" and / or the \"ETag\" for the\n   * resource has changed.\n   */\n  get stale() {\n    return !this.fresh\n  }\n\n  /**\n   * Check if the request is idempotent.\n   */\n  get idempotent() {\n    const methods = ['GET', 'HEAD', 'PUT', 'DELETE', 'OPTIONS', 'TRACE']\n    return methods.includes(this.method)\n  }\n\n  /**\n   * Return the request socket.\n   */\n  get socket() {\n    return this.req.socket\n  }\n\n  /**\n   * Get the charset when present or undefined.\n   */\n  get charset() {\n    try {\n      const { parameters } = parseContentType(/** @type {!http.IncomingMessage} */ (this.req))\n      return parameters.charset || ''\n    } catch (e) {\n      return ''\n    }\n  }\n\n  /**\n   * Return parsed Content-Length when present.\n   */\n  get length() {\n    const len = this.get('Content-Length')\n    if (len == '') return null\n    return ~~len\n  }\n\n  /**\n   * Return the protocol string \"http\" or \"https\"\n   * when requested with TLS. When the proxy setting\n   * is enabled the \"X-Forwarded-Proto\" header\n   * field will be trusted. If you're running behind\n   * a reverse proxy that supplies https for you this\n   * may be enabled.\n   */\n  get protocol() {\n    /** missing encrypted in externs\n     * @suppress {checkTypes} */\n    const encrypted = this.socket['encrypted']\n    if (encrypted) return 'https'\n    if (!this.app.proxy) return 'http'\n    const proto = this.get('X-Forwarded-Proto')\n    return proto ? proto.split(/\\s*,\\s*/, 1)[0] : 'http'\n  }\n\n  /**\n   * Short-hand for:\n   *    this.protocol == 'https'\n   */\n  get secure() {\n    return 'https' == this.protocol\n  }\n\n  /**\n   * When `app.proxy` is `true`, parse\n   * the \"X-Forwarded-For\" ip address list.\n   * For example if the value were \"client, proxy1, proxy2\"\n   * you would receive the array `[\"client\", \"proxy1\", \"proxy2\"]`\n   * where \"proxy2\" is the furthest down-stream.\n   */\n  get ips() {\n    const { proxy } = this.app\n    const val = this.get('X-Forwarded-For')\n    return proxy && val\n      ? val.split(/\\s*,\\s*/)\n      : []\n  }\n\n  /**\n   * Return request's remote address\n   * When `app.proxy` is `true`, parse\n   * the \"X-Forwarded-For\" ip address list and return the first one\n   */\n  get ip() {\n    if (!this[IP]) {\n      this[IP] = this.ips[0] || this.socket.remoteAddress || ''\n    }\n    return this[IP]\n  }\n\n  set ip(_ip) {\n    this[IP] = _ip\n  }\n\n  /**\n   * Return subdomains as an array.\n   * Subdomains are the dot-separated parts of the host before the main domain\n   * of the app. By default, the domain of the app is assumed to be the last two\n   * parts of the host. This can be changed by setting `app.subdomainOffset`.\n   * For example, if the domain is \"tobi.ferrets.example.com\":\n   * If `app.subdomainOffset` is not set, this.subdomains is\n   * `[\"ferrets\", \"tobi\"]`.\n   * If `app.subdomainOffset` is 3, this.subdomains is `[\"tobi\"]`.\n   */\n  get subdomains() {\n    const offset = this.app.subdomainOffset\n    const hostname = this.hostname\n    if (isIP(hostname)) return []\n    return hostname\n      .split('.')\n      .reverse()\n      .slice(offset)\n  }\n\n  /**\n   * Get accept object. Lazily memoized.\n   * @private\n   */\n  get accept() {\n    return this._accept || (this._accept = new Accepts(/** @type {!http.IncomingMessage} */ (this.req)))\n  }\n\n  /**\n   * Set accept object.\n   * @private\n   */\n  set accept(obj) {\n    this._accept = obj\n  }\n\n  /**\n   * Check if the given `type(s)` is acceptable, returning\n   * the best match when true, otherwise `false`, in which\n   * case you should respond with 406 \"Not Acceptable\".\n   * The `type` value may be a single mime type string\n   * such as \"application/json\", the extension name\n   * such as \"json\" or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\n   * or array is given the _best_ match, if any is returned.\n   * Examples:\n   *\n   *     // Accept: text/html\n   *     this.accepts('html');\n   *     // => \"html\"\n   *     // Accept: text/*, application/json\n   *     this.accepts('html');\n   *     // => \"html\"\n   *     this.accepts('text/html');\n   *     // => \"text/html\"\n   *     this.accepts('json', 'text');\n   *     // => \"json\"\n   *     this.accepts('application/json');\n   *     // => \"application/json\"\n   *     // Accept: text/*, application/json\n   *     this.accepts('image/png');\n   *     this.accepts('png');\n   *     // => false\n   *     // Accept: text/*;q=.5, application/json\n   *     this.accepts(['html', 'json']);\n   *     this.accepts('html', 'json');\n   *     // => \"json\"\n   * @param {!Array<string>|string} [type]\n   * @param {...string} args\n   */\n  accepts(type, ...args) {\n    return this.accept.types(type, ...args)\n  }\n\n  /**\n   * Return accepted encodings or best fit based on `encodings`.\n   * Given `Accept-Encoding: gzip, deflate`\n   * an array sorted by quality is returned:\n   *\n   *     ['gzip', 'deflate']\n   * @param {!Array<string>|string} [encoding]\n   * @param {...string} args\n   */\n  acceptsEncodings(encoding, ...args) {\n    return this.accept.encodings(encoding, ...args)\n  }\n\n  /**\n   * Return accepted charsets or best fit based on `charsets`.\n   * Given `Accept-Charset: utf-8, iso-8859-1;q=0.2, utf-7;q=0.5`\n   * an array sorted by quality is returned:\n   *\n   *     ['utf-8', 'utf-7', 'iso-8859-1']\n   * @param {!Array<string>|string} [charset]\n   * @param {...string} args\n   */\n  acceptsCharsets(charset, ...args) {\n    return this.accept.charsets(charset, ...args)\n  }\n\n  /**\n   * Return accepted languages or best fit based on `langs`.\n   * Given `Accept-Language: en;q=0.8, es, pt`\n   * an array sorted by quality is returned:\n   *\n   *     ['es', 'pt', 'en']\n   * @param {!Array<string>|string} [lang]\n   * @param {...string} args\n   */\n  acceptsLanguages(lang, ...args) {\n    return this.accept.languages(lang, ...args)\n  }\n\n  /**\n   * Check if the incoming request contains the \"Content-Type\"\n   * header field, and it contains any of the give mime `type`s.\n   * If there is no request body, `null` is returned.\n   * If there is no content type, `false` is returned.\n   * Otherwise, it returns the first `type` that matches.\n   * Examples:\n   *\n   *     // With Content-Type: text/html; charset=utf-8\n   *     this.is('html'); // => 'html'\n   *     this.is('text/html'); // => 'text/html'\n   *     this.is('text/*', 'application/json'); // => 'text/html'\n   *     // When Content-Type is application/json\n   *     this.is('json', 'urlencoded'); // => 'json'\n   *     this.is('application/json'); // => 'application/json'\n   *     this.is('html', 'application/*'); // => 'application/json'\n   *     this.is('html'); // => false\n   * @param {string|!Array<string>} types\n   * @param {...string} args\n   */\n  is(types, ...args) {\n    if (!types) return typeis(/** @type {!http.IncomingMessage} */ (this.req))\n    if (!Array.isArray(types)) types = [types, ...args]\n    return typeis(/** @type {!http.IncomingMessage} */ (this.req), types)\n  }\n\n  /**\n   * Return the request mime type void of\n   * parameters such as \"charset\".\n   */\n  get type() {\n    const type = this.get('Content-Type')\n    if (!type) return ''\n    return type.split(';')[0]\n  }\n\n  /**\n   * Return request header.\n   * The `Referrer` header field is special-cased,\n   * both `Referrer` and `Referer` are interchangeable.\n   * Examples:\n   *     this.get('Content-Type');\n   *     // => \"text/plain\"\n   *     this.get('content-type');\n   *     // => \"text/plain\"\n   *     this.get('Something');\n   *     // => ''\n   * @param {string} field\n   * @returns {string}\n   */\n  get(field) {\n    const req = this.req\n    switch (field = field.toLowerCase()) {\n    case 'referer':\n    case 'referrer':\n      return req.headers.referrer || req.headers.referer || ''\n    default: {\n      /** @suppress {checkTypes} */\n      const h = req.headers[field]\n      return h || ''\n    }\n    }\n  }\n\n  /**\n   * Inspect implementation.\n   */\n  inspect() {\n    if (!this.req) return\n    return this.toJSON()\n  }\n\n  /**\n   * Return JSON representation.\n   * @return {!Object}\n   */\n  toJSON() {\n    return {\n      'method': this.method,\n      'url': this.url,\n      'header': this.header,\n    }\n  }\n  /**\n   * @suppress {checkTypes}\n   */\n  [inspect.custom]() {\n    return this.inspect()\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Application} _goa.Application\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingMessage} http.IncomingMessage\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').ServerResponse} http.ServerResponse\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@goa/accepts/types').Accepts} _goa.Accepts\n */\n","import { format } from 'util'\nimport Cookies from '@goa/cookies'\nimport Accepts from '@goa/accepts' // eslint-disable-line\n\nimport createError from '@goa/http-errors'\nimport Delegate from '../modules/delegates'\nimport httpAssert from '../modules/http-assert'\nimport statuses from '@goa/statuses'\nimport { inspect } from 'util'\n\nimport Request from './request' // eslint-disable-line\nimport Response from './response' // eslint-disable-line\n\nconst COOKIES = Symbol('context#cookies')\n\n/**\n * Context prototype.\n * @implements {_goa.Context}\n */\nexport default class Context {\n  constructor() {\n    // suppress types here so that can access\n    // the properties without casting later\n    /**\n     * @suppress {checkTypes}\n     * @type {?_goa.Application}\n     */\n    this.app = null\n    /**\n     * @suppress {checkTypes}\n     * @type {Request}\n     */\n    this.request = null\n    /**\n     * @suppress {checkTypes}\n     * @type {Response}\n     */\n    this.response = null\n    /**\n     * @suppress {checkTypes}\n     * @type {?http.IncomingMessage}\n     */\n    this.req = null\n    /**\n     * @suppress {checkTypes}\n     * @type {?http.ServerResponse}\n     */\n    this.res = null\n\n    /**\n     * @suppress {checkTypes}\n     * @type {?string}\n     */\n    this.originalUrl = null\n    /** @type {Object} */ this.state = null\n    /** @type {_goa.Cookies} */ this[COOKIES] = null\n\n    /**\n     * Set to false to bypass Koa's response.\n     * @type {boolean}\n     */\n    this.respond = true\n\n    // REQUEST delegates\n    // method\n    /** @type {?} **/\n    this.acceptsLanguages = undefined\n    /** @type {?} **/\n    this.acceptsEncodings = undefined\n    /** @type {?} **/\n    this.acceptsCharsets = undefined\n    /** @type {?} **/\n    this.accepts = undefined\n    /** @type {?} **/\n    this.get = undefined\n    /** @type {?} **/\n    this.is = undefined\n\n    // access\n    /** @type {?} **/\n    this.querystring = undefined\n    /** @type {?} **/\n    this.idempotent = undefined\n    /** @type {?} **/\n    this.socket = undefined\n    /** @type {?} **/\n    this.search = undefined\n    /** @type {?} **/\n    this.method = undefined\n    /** @type {?} **/\n    this.query = undefined\n    /** @type {?} **/\n    this.path = undefined\n    /** @type {?} **/\n    this.url = undefined\n    /** @type {_goa.Accepts} **/\n    this.accept = null\n\n    // getters\n    /** @type {?} **/\n    this.origin = undefined\n    /** @type {?} **/\n    this.href = undefined\n    /** @type {?} **/\n    this.subdomains = undefined\n    /** @type {?} **/\n    this.protocol = undefined\n    /** @type {?} **/\n    this.host = undefined\n    /** @type {?} **/\n    this.hostname = undefined\n    /** @type {?} **/\n    this.URL = undefined\n    /** @type {?} **/\n    this.header = undefined\n    /** @type {?} **/\n    this.headers = undefined\n    /** @type {?} **/\n    this.secure = undefined\n    /** @type {?} **/\n    this.stale = undefined\n    /** @type {?} **/\n    this.fresh = undefined\n    /** @type {?} **/\n    this.ips = undefined\n    /** @type {?} **/\n    this.ip = undefined\n\n    // RESPONSE delegates\n    // method\n    /** @type {?} **/ this.attachment = undefined\n    /** @type {?} **/ this.redirect = undefined\n    /** @type {?} **/ this.remove = undefined\n    /** @type {?} **/ this.vary = undefined\n    /** @type {?} **/ this.set = undefined\n    /** @type {?} **/ this.append = undefined\n    /** @type {?} **/ this.flushHeaders = undefined\n    // access\n    /** @type {?} **/ this.status = undefined\n    /** @type {?} **/ this.message = undefined\n    /** @type {?} **/ this.body = undefined\n    /** @type {?} **/ this.length = undefined\n    /** @type {?} **/ this.type = undefined\n    /** @type {?} **/ this.lastModified = undefined\n    /** @type {?} **/ this.etag = undefined\n    // getter\n    /** @type {boolean} **/ this.headerSent = false\n    /** @type {boolean} **/ this.writable = false\n  }\n  /**\n   * util.inspect() implementation, which\n   * just returns the JSON output.\n   */\n  inspect() {\n    return this.toJSON()\n  }\n\n  /**\n   * Return JSON representation.\n   *\n   * Here we explicitly invoke .toJSON() on each\n   * object, as iteration will otherwise fail due\n   * to the getters and cause utilities such as\n   * clone() to fail.\n   * @return {!Object}\n   */\n  toJSON() {\n    return {\n      'request': this.request.toJSON(),\n      'response': this.response.toJSON(),\n      'app': this.app.toJSON(),\n      'originalUrl': this.originalUrl,\n      'req': '<original node req>',\n      'res': '<original node res>',\n      'socket': '<original node socket>',\n    }\n  }\n\n  /**\n   * Similar to .throw(), adds assertion.\n   *\n   *    this.assert(this.user, 401, 'Please login!');\n   *\n   * See: https://github.com/jshttp/http-assert\n   */\n  get assert() {\n    return httpAssert\n  }\n\n  /**\n   * Throw an error with `status` (default 500) and\n   * `msg`. Note that these are user-level\n   * errors, and the message may be exposed to the client.\n   *\n   * See: https://github.com/idiocc/http-errors\n   *\n   * Note: `status` should only be passed as the first parameter.\n   *\n   * @param {...(string|number|!Error)} [args]\n   */\n  throw(...args) {\n    throw createError(...args)\n  }\n\n  /**\n   * Default error handling.\n   *\n   * @param {Error} err\n   * @api private\n   */\n  onerror(err) {\n    // don't do anything if there is no error.\n    // this allows you to pass `this.onerror`\n    // to node-style callbacks.\n    if (null == err) return\n\n    if (!(err instanceof Error)) err = new Error(format('non-error thrown: %j', err))\n\n    let headerSent = false\n    if (this.headerSent || !this.writable) {\n      headerSent = err['headerSent'] = true\n    }\n\n    // delegate\n    this.app.emit('error', err, this)\n\n    // nothing we can do here other\n    // than delegate to the app-level\n    // handler and log.\n    if (headerSent) {\n      return\n    }\n\n    const { res } = this\n\n    // first unset all headers\n    res.getHeaderNames().forEach(name => res.removeHeader(name))\n\n    // then set those specified\n    this.set(err.headers)\n\n    // force text/plain\n    this.type = 'text'\n\n    // ENOENT support\n    if ('ENOENT' == err.code) err.status = 404\n\n    // default to 500\n    if ('number' != typeof err.status || !statuses[err.status]) err.status = 500\n\n    // respond\n    const code = statuses[err.status]\n    const msg = err.expose ? err.message : code\n    this.status = err.status\n    this.length = Buffer.byteLength(msg)\n    res.end(msg)\n  }\n\n  get cookies() {\n    if (!this[COOKIES]) {\n      this[COOKIES] = new Cookies(\n        /** @type {!http.IncomingMessage} */ (this.req),\n        /** @type {!http.ServerResponse} */ (this.res), {\n          keys: this.app.keys, // change @goaCookies\n          secure: this.request.secure,\n        })\n    }\n    return this[COOKIES]\n  }\n\n  set cookies(_cookies) {\n    this[COOKIES] = _cookies\n  }\n  /**\n   * @suppress {checkTypes}\n   */\n  [inspect.custom]() {\n    return this.inspect()\n  }\n}\n\n/**\n * Custom inspection implementation for newer Node.js versions.\n *\n * @return {Object}\n */\n// /* istanbul ignore else */\n// if (util.inspect.custom) {\n//   module.exports[util.inspect.custom] = module.exports.inspect\n// }\n\n/**\n * Response delegation.\n */\nnew Delegate(Context.prototype, 'response')\n  .method('attachment')\n  .method('redirect')\n  .method('remove')\n  .method('vary')\n  .method('set')\n  .method('append')\n  .method('flushHeaders')\n  .access('status')\n  .access('message')\n  .access('body')\n  .access('length')\n  .access('type')\n  .access('lastModified')\n  .access('etag')\n  .getter('headerSent')\n  .getter('writable')\n\n/**\n * Request delegation.\n */\nnew Delegate(Context.prototype, 'request')\n  .method('acceptsLanguages')\n  .method('acceptsEncodings')\n  .method('acceptsCharsets')\n  .method('accepts')\n  .method('get')\n  .method('is')\n  .access('querystring')\n  .access('idempotent')\n  .access('socket')\n  .access('search')\n  .access('method')\n  .access('query')\n  .access('path')\n  .access('url')\n  .access('accept')\n  .getter('origin')\n  .getter('href')\n  .getter('subdomains')\n  .getter('protocol')\n  .getter('host')\n  .getter('hostname')\n  .getter('URL')\n  .getter('header')\n  .getter('headers')\n  .getter('secure')\n  .getter('stale')\n  .getter('fresh')\n  .getter('ips')\n  .getter('ip')\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Application} _goa.Application\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingMessage} http.IncomingMessage\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').ServerResponse} http.ServerResponse\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@goa/accepts/types').Accepts} _goa.Accepts\n */","import assert from 'assert'\nimport { extname } from 'path'\nimport statuses, { empty, redirect } from '@goa/statuses'\nimport onFinish from '../modules/on-finished'\nimport destroy from '../modules/destroy'\nimport vary from '@goa/vary'\nimport { inspect } from 'util'\nimport { is } from '@goa/type-is'\nimport contentDisposition from '../modules/content-disposition'\nimport ensureErrorHandler from '../modules/error-inject'\nimport getType from '../modules/cache-content-type'\nimport isJSON from '../modules/koa-is-json'\nimport escape from '../modules/escape-html'\n\nimport Context from './context' // eslint-disable-line\nimport Request from './request' // eslint-disable-line\n\n/**\n * The response implementation.\n * @implements {_goa.Response}\n */\nexport default class Response {\n  constructor() {\n    /**\n     * @suppress {checkTypes}\n     * @type {_goa.Application}\n     */\n    this.app = null\n    /**\n     * @suppress {checkTypes}\n     * @type {Context}\n     */\n    this.ctx = null\n    /**\n     * @suppress {checkTypes}\n     * @type {Request}\n     */\n    this.request = null\n    /**\n     * @suppress {checkTypes}\n     * @type {http.IncomingMessage}\n     */\n    this.req = null\n    /**\n     * @suppress {checkTypes}\n     * @type {http.ServerResponse}\n     */\n    this.res = null\n    /** @type {?boolean} */\n    this._explicitStatus = null\n    /** @type {?} */\n    this._body = undefined\n  }\n  /**\n   * Return the request socket.\n   */\n  get socket() {\n    return /** @type {net.Socket} */ (this.res.socket)\n  }\n\n  /**\n   * Return response header.\n   */\n  get header() {\n    return this.res.getHeaders()\n  }\n\n  /**\n   * Return response header, alias as response.header\n   */\n  get headers() {\n    return this.header\n  }\n\n  /**\n   * Get response status code.\n   */\n  get status() {\n    return this.res.statusCode\n  }\n\n  /**\n   * Set response status code.\n   */\n  set status(code) {\n    if (this.headerSent) return\n\n    assert(Number.isInteger(code), 'status code must be a number')\n    assert(code >= 100 && code <= 999, `invalid status code: ${code}`)\n    this._explicitStatus = true\n    this.res.statusCode = code\n    if (this.req.httpVersionMajor < 2) this.res.statusMessage = statuses[code]\n    if (this.body && empty[code]) this.body = null\n  }\n\n  /**\n   * Get response status message.\n   */\n  get message() {\n    return this.res.statusMessage || statuses[this.status]\n  }\n\n  /**\n   * Set response status message.\n   * @param {string} msg\n   */\n  set message(msg) {\n    this.res.statusMessage = msg\n  }\n\n  /**\n   * Get response body.\n   * @returns {string|!Buffer|Object|!stream.Stream}\n   */\n  get body() {\n    return this._body\n  }\n\n  /**\n   * Set response body.\n   * @param {string|!Buffer|Object|!stream.Stream} val\n   */\n  set body(val) {\n    const original = this._body\n    this._body = val\n\n    // no content\n    if (null == val) {\n      if (!empty[this.status]) this.status = 204\n      this.remove('Content-Type')\n      this.remove('Content-Length')\n      this.remove('Transfer-Encoding')\n      return\n    }\n\n    // set the status\n    if (!this._explicitStatus) this.status = 200\n\n    // set the content-type only if not yet set\n    const setType = !this.header['content-type']\n\n    // string\n    if ('string' == typeof val) {\n      if (setType) this.type = /^\\s*</.test(val) ? 'html' : 'text'\n      this.length = Buffer.byteLength(val)\n      return\n    }\n\n    // buffer\n    if (Buffer.isBuffer(val)) {\n      if (setType) this.type = 'bin'\n      this.length = val.length\n      return\n    }\n\n    // stream\n    if ('function' == typeof val.pipe) {\n      onFinish(/** @type {!http.ServerResponse} */ (this.res), destroy.bind(null, /** @type {!stream.Stream} */ (val)))\n      ensureErrorHandler(val, err => this.ctx.onerror(err))\n\n      // overwriting\n      if (null != original && original != val) this.remove('Content-Length')\n\n      if (setType) this.type = 'bin'\n      return\n    }\n\n    // json\n    this.remove('Content-Length')\n    this.type = 'json'\n  }\n\n  /**\n   * Set Content-Length field to `n`.\n   */\n  set length(n) {\n    this.set('Content-Length', /** @type {number} */ (n))\n  }\n\n  /**\n   * Return parsed response Content-Length when present.\n   */\n  get length() {\n    const len = this.header['content-length']\n    const body = this.body\n\n    if (null == len) {\n      if (!body) return null\n      if ('string' == typeof body) return Buffer.byteLength(body)\n      if (Buffer.isBuffer(body)) return body.length\n      if (isJSON(body)) return Buffer.byteLength(JSON.stringify(body))\n      return null\n    }\n\n    return Math.trunc(parseInt(len, 10)) || 0\n  }\n\n  /**\n   * Check if a header has been written to the socket.\n   */\n  get headerSent() {\n    return this.res.headersSent\n  }\n\n  /**\n   * Vary on `field`.\n   */\n  vary(field) {\n    if (this.headerSent) return\n\n    vary(this.res, field)\n  }\n\n  /**\n   * Perform a 302 redirect to `url`.\n   * The string \"back\" is special-cased\n   * to provide Referrer support, when Referrer\n   * is not present `alt` or \"/\" is used.\n   * Examples:\n   *    this.redirect('back');\n   *    this.redirect('back', '/index.html');\n   *    this.redirect('/login');\n   *    this.redirect('http://google.com');\n   * @param {string} url\n   * @param {string} [alt]\n   */\n  redirect(url, alt) {\n    // location\n    if ('back' == url) url = this.ctx.get('Referrer') || alt || '/' // todo\n    this.set('Location', url)\n\n    // status\n    if (!redirect[this.status]) this.status = 302\n\n    // html\n    if (this.ctx.accepts('html')) { // todo\n      url = escape(url)\n      this.type = 'text/html; charset=utf-8'\n      this.body = `Redirecting to <a href=\"${url}\">${url}</a>.`\n      return\n    }\n\n    // text\n    this.type = 'text/plain; charset=utf-8'\n    this.body = `Redirecting to ${url}.`\n  }\n\n  /**\n   * Set Content-Disposition header to \"attachment\" with optional `filename`.\n   * @param {string} [filename]\n   * @param {!_goa.ContentDisposition} [options]\n   */\n  attachment(filename, options) {\n    if (filename) this.type = extname(filename)\n    this.set('Content-Disposition', contentDisposition(filename, options))\n  }\n\n  /**\n   * Set Content-Type response header with `type` through `mime.lookup()`\n   * when it does not contain a charset.\n   * Examples:\n   *     this.type = '.html';\n   *     this.type = 'html';\n   *     this.type = 'json';\n   *     this.type = 'application/json';\n   *     this.type = 'png';\n   * @param {string} type\n   */\n  set type(type) {\n    type = getType(type)\n    if (type) {\n      this.set('Content-Type', type)\n    } else {\n      this.remove('Content-Type')\n    }\n  }\n\n  /**\n   * Set the Last-Modified date using a string or a Date.\n   *     this.response.lastModified = new Date();\n   *     this.response.lastModified = '2013-09-13';\n   * @param {string|Date} val\n   */\n  set lastModified(val) {\n    if ('string' == typeof val) val = new Date(val)\n    this.set('Last-Modified', val.toUTCString())\n  }\n\n  /**\n   * Get the Last-Modified date in Date form, if it exists.\n   */\n  get lastModified() {\n    const date = this.get('last-modified')\n    if (date) return new Date(date)\n    return null\n  }\n\n  /**\n   * Set the ETag of a response.\n   * This will normalize the quotes if necessary.\n   *     this.response.etag = 'md5hashsum';\n   *     this.response.etag = '\"md5hashsum\"';\n   *     this.response.etag = 'W/\"123456789\"';\n   * @param {string} val\n   */\n  set etag(val) {\n    if (!/^(W\\/)?\"/.test(val)) val = `\"${val}\"`\n    this.set('ETag', val)\n  }\n\n  /**\n   * Get the ETag of a response.\n   */\n  get etag() {\n    return this.get('ETag')\n  }\n\n  /**\n   * Return the response mime type void of\n   * parameters such as \"charset\".\n   */\n  get type() {\n    const type = this.get('Content-Type')\n    if (!type) return ''\n    return type.split(';', 1)[0]\n  }\n\n  /**\n   * Check whether the response is one of the listed types.\n   * Pretty much the same as `this.request.is()`.\n   * @param {string|!Array<string>} types\n   * @param {...string} args\n   * @return {string|boolean}\n   */\n  is(types, ...args) {\n    const type = this.type\n    if (!types) return type || false\n    if (!Array.isArray(types)) types = [types, ...args]\n    return is(type, types)\n  }\n\n  /**\n   * Return response header.\n   * Examples:\n   *     this.get('Content-Type');\n   *     // => \"text/plain\"\n   *     this.get('content-type');\n   *     // => \"text/plain\"\n   * @param {string} field\n   */\n  get(field) {\n    return this.header[field.toLowerCase()] || ''\n  }\n\n  /**\n   * Set header `field` to `val`, or pass\n   * an object of header fields.\n   * Examples:\n   *    this.set('Foo', ['bar', 'baz']);\n   *    this.set('Accept', 'application/json');\n   *    this.set({ Accept: 'text/plain', 'X-API-Key': 'tobi' });\n   * @param {string|!Object} field\n   * @param {string|!Array|number} [val]\n   */\n  set(field, val) {\n    if (this.headerSent) return\n\n    if (2 == arguments.length) {\n      const f = /** @type {string} */ (field)\n      if (Array.isArray(val)) val = val.map(v => typeof v == 'string' ? v : String(v))\n      else if (typeof val != 'string') val = String(val)\n      this.res.setHeader(f, val)\n    } else {\n      for (const key in field) {\n        this.set(key, field[key])\n      }\n    }\n  }\n\n  /**\n   * Append additional header `field` with value `val`.\n   * Examples:\n```\nthis.append('Link', ['<http://localhost/>', '<http://localhost:3000/>']);\nthis.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly');\nthis.append('Warning', '199 Miscellaneous warning');\n```\n   * @param {string} field\n   * @param {!string|!Array<string>} val\n   */\n  append(field, val) {\n    const prev = this.get(field)\n\n    if (prev) {\n      val = Array.isArray(prev)\n        ? prev.concat(val)\n        : [prev].concat(val)\n    }\n\n    return this.set(field, val)\n  }\n\n  /**\n   * Remove header `field`.\n   * @param {string} field\n   */\n  remove(field) {\n    if (this.headerSent) return\n\n    this.res.removeHeader(field)\n  }\n\n  /**\n   * Checks if the request is writable.\n   * Tests for the existence of the socket\n   * as node sometimes does not set it.\n   * @private\n   */\n  get writable() {\n    // can't write any more after response finished\n    if (this.res.finished) return false\n\n    const socket = /** @type {!net.Socket} */ (this.res.socket)\n    // There are already pending outgoing res, but still writable\n    // https://github.com/nodejs/node/blob/v4.4.7/lib/_http_server.js#L486\n    if (!socket) return true\n    return socket.writable\n  }\n\n  /**\n   * Inspect implementation.\n   */\n  inspect() {\n    if (!this.res) return\n    const o = this.toJSON()\n    o.body = this.body\n    return o\n  }\n\n  /**\n   * Return JSON representation.\n   * @return {!Object}\n   */\n  toJSON() {\n    return {\n      'status': this.status,\n      'message': this.message,\n      'header': this.header,\n    }\n  }\n\n  /**\n   * Flush any set headers, and begin the body\n   */\n  flushHeaders() {\n    this.res.flushHeaders()\n  }\n  /**\n   * @suppress {checkTypes}\n   */\n  [inspect.custom]() {\n    return this.inspect()\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Application} _goa.Application\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingMessage} http.IncomingMessage\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').ServerResponse} http.ServerResponse\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('net').Socket} net.Socket\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Stream} stream.Stream\n */","/**\n * Compose `middleware` returning a fully valid middleware comprised of all those which are passed.\n * @param {!Array<!Function>} middleware\n */\nexport default function compose(middleware) {\n  if (!Array.isArray(middleware))\n    throw new TypeError('Middleware stack must be an array!')\n  for (const fn of middleware) {\n    if (typeof fn != 'function')\n      throw new TypeError('Middleware must be composed of functions!')\n  }\n\n  return (context, next) => {\n    // last called middleware #\n    let index = -1\n    return dispatch(0)\n\n    function dispatch(i) {\n      if (i <= index) return Promise.reject(new Error('next() called multiple times'))\n      index = i\n      let fn = middleware[i]\n      if (i == middleware.length) fn = next\n      if (!fn) return Promise.resolve()\n      try {\n        return Promise.resolve(fn(context, dispatch.bind(null, i + 1)))\n      } catch (err) {\n        return Promise.reject(err)\n      }\n    }\n  }\n}\n\n/**\n * @license MIT\n * (c) dead-horse\n * https://npmjs.org/koa-compose\n */","import Debug from '@idio/debug'\nimport isGeneratorFunction from '@goa/is-generator-function'\nimport { createServer } from 'http'\nimport Stream from 'stream'\nimport EventEmitter from 'events'\nimport { format } from 'util'\nimport Response from './response'\nimport Request from './request'\nimport Context from './context'\nimport { inspect } from 'util'\nimport { empty } from '@goa/statuses'\nimport isJSON from '../modules/koa-is-json'\nimport onFinished from '../modules/on-finished'\nimport compose from '@goa/compose'\n\nconst debug = Debug('@goa/koa:application')\n\n/**\n * @implements {_goa.Application}\n */\nexport default class Application extends EventEmitter {\n  /**\n   * Initialize a new `Application`.\n   * @param {!_goa.ApplicationOptions} options\n   */\n  constructor(options = {}) {\n    const {\n      proxy = false,\n      subdomainOffset = 2,\n      env = process.env.NODE_ENV || 'development',\n      keys,\n      Context: C = Context,\n    } = options\n    super()\n\n    this.proxy = proxy\n    this.silent = false\n    this.middleware = []\n    this.subdomainOffset = subdomainOffset,\n    this.env = env\n    this.context = /** @type {!Context} */ (Object.create(C.prototype))\n    this.request = /** @type {!Request} */ (Object.create(Request.prototype))\n    this.response = /** @type {!Response} */ (Object.create(Response.prototype))\n\n    this.keys = keys\n    // if (util.inspect.custom) {\n    //   this[util.inspect.custom] = this.inspect\n    // }\n  }\n  /**\n   * @suppress {checkTypes}\n   */\n  [inspect.custom]() {\n    return this.inspect()\n  }\n\n  /**\n   * Shorthand for:\n   *\n   *    http.createServer(app.callback()).listen(...)\n   *\n   */\n  listen(...args) {\n    debug('listen')\n    const server = createServer(this.callback())\n    return server.listen(...args)\n  }\n\n  /**\n   * Return JSON representation.\n   * We only bother showing settings.\n   * @return {!Object}\n   */\n  toJSON() {\n    return {\n      'subdomainOffset': this.subdomainOffset,\n      'proxy': this.proxy,\n      'env': this.env,\n    }\n  }\n\n  /**\n   * Inspect implementation.\n   */\n  inspect() {\n    return this.toJSON()\n  }\n\n  /**\n   * Use the given middleware `fn`.\n   *\n   * Old-style middleware will be converted.\n   *\n   * @param {!_goa.Middleware} fn\n   */\n  use(fn) {\n    if (typeof fn != 'function')\n      throw new TypeError('middleware must be a function!')\n    if (isGeneratorFunction(fn)) {\n      throw new Error(\n        'Generator functions are not supported by @goa/koa. Use koa-convert on them first.')\n    }\n    debug('use %s', fn._name || fn.name || '-')\n    this.middleware.push(fn)\n    return this\n  }\n\n  /**\n   * Return a request handler callback for node's native http server.\n   */\n  callback() {\n    const fn = compose(this.middleware)\n\n    if (!this.listenerCount('error')) this.on('error', this.onerror)\n\n    /** @type {function(!http.IncomingMessage, !http.ServerResponse): !Promise} */\n    const handleRequest = (req, res) => {\n      const ctx = this.createContext(req, res)\n      return this.handleRequest(ctx, fn)\n    }\n\n    return handleRequest\n  }\n\n  /**\n   * Handle request in callback.\n   * @param {!_goa.Context} ctx\n   * @param {!_goa.Middleware} middleware Composed middleware.\n   * @private\n   */\n  async handleRequest(ctx, middleware) {\n    const res = ctx.res\n    res.statusCode = 404\n    const onerror = err => ctx.onerror(err)\n    onFinished(res, onerror)\n    try {\n      await middleware(ctx)\n      return respond(ctx)\n    } catch (err) {\n      onerror(err)\n    }\n    // const onerror = err => ctx.onerror(err)\n    // const handleResponse = () => respond(ctx)\n    // onFinished(res, onerror)\n    // return fnMiddleware(ctx).then(handleResponse).catch(onerror)\n  }\n\n  /**\n   * Initialize a new context.\n   * @param {!http.IncomingMessage} req\n   * @param {!http.ServerResponse} res\n   * @private\n   */\n  createContext(req, res) {\n    const context = /** @type {!Context} */\n      (Object.create(this.context))\n    const request = context.request = /** @type {!Request} */\n      (Object.create(this.request))\n    const response = context.response = /** @type {!Response} */\n      (Object.create(this.response))\n    context.app = request.app = response.app = this\n    context.req = request.req = response.req = req\n    context.res = request.res = response.res = res\n    request.ctx = response.ctx = context\n    request.response = response\n    response.request = request\n    context.originalUrl = request.originalUrl = req.url\n    context.state = {}\n    return context\n  }\n\n  /**\n   * Default error handler.\n   * @param {!Error} err\n   * @private\n   */\n  onerror(err) {\n    if (!(err instanceof Error))\n      throw new TypeError(format('non-error thrown: %j', err))\n\n    if (404 == err.status || err.expose) return\n    if (this.silent) return\n\n    const msg = err.stack || err.toString()\n    console.error()\n    console.error(msg.replace(/^/gm, '  '))\n    console.error()\n  }\n}\n\n/**\n * Response helper.\n * @param {!_goa.Context} ctx\n */\nfunction respond(ctx) {\n  // allow bypassing koa\n  if (false == ctx.respond) return\n\n  if (!ctx.writable) return\n\n  const { res, status: code } = ctx\n  let body = ctx.body\n\n  // ignore body\n  if (empty[code]) {\n    // strip headers\n    ctx.body = null\n    return res.end()\n  }\n\n  if ('HEAD' == ctx.method) {\n    if (!res.headersSent && isJSON(body)) {\n      ctx.length = Buffer.byteLength(JSON.stringify(body))\n    }\n    return res.end()\n  }\n\n  // status body\n  if (null == body) {\n    if (ctx.req.httpVersionMajor >= 2) {\n      body = String(code)\n    } else {\n      body = ctx.message || String(code)\n    }\n    if (!res.headersSent) {\n      ctx.type = 'text'\n      ctx.length = Buffer.byteLength(body)\n    }\n    return res.end(body)\n  }\n\n  // responses\n  if (Buffer.isBuffer(body)) return res.end(body)\n  if ('string' == typeof body) return res.end(body)\n  if (body instanceof Stream) return body.pipe(res)\n\n  // body: json\n  body = JSON.stringify(body)\n  if (!res.headersSent) {\n    ctx.length = Buffer.byteLength(body)\n  }\n  res.end(body)\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').Server} http.Server\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingMessage} http.IncomingMessage\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').ServerResponse} http.ServerResponse\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Middleware} _goa.Middleware\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Context} _goa.Context\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').ApplicationOptions} _goa.ApplicationOptions\n */","import NodeEnv from './node'\nimport setup from './common'\n\n/**\n * Creates a function to log messages.\n * @param {string} namespace\n */\nexport default function(namespace) {\n  if (!namespace) throw new Error('To use debug, pass the namespace.')\n  const node = setup(NodeEnv)\n  const debug = node(namespace)\n  return debug\n}","import Goa from '@goa/goa'\nimport Context from '@goa/goa/src/context'\n\nmodule.exports = {\n  '_Goa': Goa,\n  '_Context': Context,\n}"],
"names":["$jscompDefaultExport","tty","format","util","inspect","val","options","type","length","parse","isFinite","long","msAbs","Math","abs","ms","d","plural","h","m","s","round","Error","JSON","stringify","str","String","match","exec","n","parseFloat","toLowerCase","y","w","name","formatThousandsRegExp","formatDecimalsRegExp","map","pow","value","Number","mag","thousandsSeparator","unitSeparator","decimalPlaces","undefined","fixedDecimals","unit","toFixed","replace","colors","c","string","color","cc","v","inspectOpts","Object","keys","process","env","filter","key","test","reduce","obj","prop","substring","_","k","toUpperCase","NodeEnv","init","debug","log","args","stderr","write","formatArgs","namespace","diff","uc","colorCode","prefix","split","join","push","toISOString","Date","save","namespaces","load","useColors","isatty","fd","formatters","o","opts","O","f","getDebug","enabled","curr","prevTime","prev","coerce","unshift","index","formatter","call","splice","apply","createDebug","instances","selectColor","hash","i","charCodeAt","enable","names","skips","len","RegExp","substr","instance","Debug","indexOf","stack","message","toStr","prototype","toString","fnToStr","Function","isFnRegex","hasToStringTag","Symbol","toStringTag","getProto","getPrototypeOf","e","generatorFunc","GeneratorFunction","OutgoingMessage","http","createServer","stream","events","assert","basename","path","extname","codes","populateStatusesMap","redirect","empty","statuses","status","arr","statusCodes","forEach","code","TypeError","parseInt","isNaN","first","stuff","done","callback","cleanup","arguments","x","cleanups","ee","removeListener","event","fn","thunk","Array","isArray","j","listener","on","cancel","onevent","arg1","err","onFinished","msg","socket","finished","writable","complete","u","readable","setImmediate","attached","__onFinished","queue","createListener","attachFinishedListener","onFinish","error","eeMsg","eeSocket","onSocket","ReadStream","fs","destroy","close","onOpenClose","Stream","FIELD_NAME_REGEXP","header","end","list","start","db","require","EXTRACT_TYPE_REGEXP","TEXT_TYPE_REGEXP","extensions","create","types","populateMaps","lookup","preference","mime","exts","from","to","PARAM_REGEXP","QESC_REGEXP","TYPE_REGEXP","getHeader","headers","trim","ContentType","lastIndex","parameters","typeis","normalize","expected","actualParts","expectedParts","typeofrequest","req","ENCODE_URL_ATTR_CHAR_REGEXP","HEX_ESCAPE_REGEXP","NON_LATIN1_REGEXP","QUOTE_REGEXP","TEXT_REGEXP","TOKEN_REGEXP","contentDisposition","filename","fallback","params","createparams","ContentDisposition","isQuotedString","fallbackName","hasFallback","param","sort","encodeURIComponent","encoded","pencode","char","listeners","includes","_update","item","cache","set","size","max","_cache","Map","LRU","getNow","now","get","maxAge","expired","checkEntry","entry","cacheKeys","add","Set","entries","typeLRUCache","isJSON","body","Buffer","isBuffer","matchHtmlRegExp","createHmac","_crypto","sign","data","algorithm","encoding","update","digest","constantTimeCompare","val1","val2","result","Keygrip","l","sig","fieldContentRegExp","sameSiteRegExp","toHeader","expires","toUTCString","domain","sameSite","secure","httpOnly","Cookie","attrs","overwrite","Cookies","request","response","sigName","signed","remote","res","proto","encrypted","connection","rest","cookie","pushCookie","setHeader","simpleCharsetRegExp","parseAcceptCharset","accept","accepts","a","charset","q","p","Boolean","preferredCharsets","provided","isQuality","compareSpecs","getFullCharset","priorities","priority","spec","b","simpleEncodingRegExp","parseAcceptEncoding","hasIdentity","minQuality","specify","min","preferredEncodings","getFullEncoding","getPriority","getEncoding","simpleLanguageRegExp","parseAcceptLanguage","language","parseLanguage","suffix","full","preferredLanguages","getFullLanguage","getLanguage","simpleMediaTypeRegExp","parseAccept","quoteCount","mediaType","parseMediaType","subtype","kvps","splitKeyValuePair","pair","every","preferredMediaTypes","getFullType","getType","count","Negotiator","available","charsets","encodings","languages","mediaTypes","Accepts","negotiator","mimes","extToMime","validMime","createError","props","arg","statusCode","emitWarning","HttpError","charAt","captureStackTrace","expose","CodeError","toIdentifier","className","token","slice","getter","target","getters","__defineGetter__","setter","setters","__defineSetter__","Delegator","methods","URL","url","Url","isIP","net","querystring","parseurl","parsed","_parsedUrl","pathname","query","search","_raw","CACHE_CONTROL_NO_CACHE_REGEXP","fresh","reqHeaders","resHeaders","modifiedSince","noneMatch","cacheControl","etag","etagStale","lastModified","modifiedStale","parseHttpDate","date","timestamp","NaN","IP","Request","ctx","app","originalUrl","_querycache","_accept","memoizedURL","protocol","host","origin","method","qsParse","qsStringify","proxy","httpVersionMajor","hostname","parseContentType","ips","remoteAddress","_ip","offset","subdomainOffset","reverse","lang","field","referrer","referer","toJSON","custom","COOKIES","Context","state","respond","idempotent","is","acceptsCharsets","acceptsEncodings","acceptsLanguages","flushHeaders","append","vary","remove","attachment","ip","stale","subdomains","href","headerSent","httpAssert","emit","getHeaderNames","removeHeader","byteLength","_cookies","Delegate","access","Response","_explicitStatus","_body","getHeaders","isInteger","statusMessage","original","setType","pipe","bind","ensureErrorHandler","onerror","trunc","headersSent","fields","vals","fld","alt","html","escape","mimeType","concat","compose","middleware","context","next","dispatch","Promise","reject","resolve","setup","debug.destroy","extend","debug.extend","ns","delimiter","newDebug","node","handleRequest","Application","EventEmitter","NODE_ENV","C","silent","server","listen","_name","listenerCount","createContext","console","module","exports","Goa"]
}
